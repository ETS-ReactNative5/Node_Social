{"ast":null,"code":"var _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-btr/src/Components/IconPicker.tsx\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nexport function IconPicker(_ref) {\n  var _this = this;\n\n  var _ref$icons = _ref.icons,\n      icons = _ref$icons === void 0 ? [\"account-circle\", \"alarm\", \"apps\", \"attachment\", \"autorenew\", \"check\", \"close\", \"layers\", \"star\"] : _ref$icons,\n      _ref$onSelect = _ref.onSelect,\n      onSelect = _ref$onSelect === void 0 ? function (icon) {} : _ref$onSelect,\n      _ref$selectedIcon = _ref.selectedIcon,\n      selectedIcon = _ref$selectedIcon === void 0 ? \"account-circle\" : _ref$selectedIcon;\n  return React.createElement(FlatList, {\n    data: icons,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        style: [styles.circle, {\n          borderColor: selectedIcon === item ? \"#eee\" : \"#fff\"\n        }],\n        onPress: function onPress() {\n          onSelect(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        name: item,\n        style: styles.icon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return \"key\" + index;\n    },\n    horizontal: true,\n    keyboardShouldPersistTaps: \"always\",\n    style: {\n      maxHeight: 75\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  circle: {\n    width: 50,\n    height: 50,\n    borderRadius: 50,\n    margin: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 2\n  },\n  icon: {\n    color: \"#888\",\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-btr/src/Components/IconPicker.tsx"],"names":["React","Icon","IconPicker","icons","onSelect","icon","selectedIcon","item","styles","circle","borderColor","index","maxHeight","StyleSheet","create","width","height","borderRadius","margin","justifyContent","alignItems","borderWidth","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,IAAP;AAQA,OAAO,SAASC,UAAT,OAca;AAAA;;AAAA,wBAblBC,KAakB;AAAA,MAblBA,KAakB,2BAbV,CACN,gBADM,EAEN,OAFM,EAGN,MAHM,EAIN,YAJM,EAKN,WALM,EAMN,OANM,EAON,OAPM,EAQN,QARM,EASN,MATM,CAaU;AAAA,2BAFlBC,QAEkB;AAAA,MAFlBA,QAEkB,8BAFP,UAACC,IAAD,EAAkB,CAAE,CAEb;AAAA,+BADlBC,YACkB;AAAA,MADlBA,YACkB,kCADH,gBACG;AAClB,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEH,KADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGI,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE,CACLC,MAAM,CAACC,MADF,EAEL;AAAEC,UAAAA,WAAW,EAAEJ,YAAY,KAAKC,IAAjB,GAAwB,MAAxB,GAAiC;AAAhD,SAFK,CADT;AAKE,QAAA,OAAO,EAAE,mBAAM;AACbH,UAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACH,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADU;AAAA,KAFd;AAeE,IAAA,YAAY,EAAE,sBAACE,IAAD,EAAOI,KAAP;AAAA,aAAiB,QAAQA,KAAzB;AAAA,KAfhB;AAgBE,IAAA,UAAU,EAAE,IAhBd;AAiBE,IAAA,yBAAyB,EAAC,QAjB5B;AAkBE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAlBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAsBD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,MAAM,EAAE;AACNM,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNC,IAAAA,cAAc,EAAE,QALV;AAMNC,IAAAA,UAAU,EAAE,QANN;AAONC,IAAAA,WAAW,EAAE;AAPP,GADuB;AAU/BhB,EAAAA,IAAI,EAAE;AAAEiB,IAAAA,KAAK,EAAE,MAAT;AAAiBC,IAAAA,QAAQ,EAAE;AAA3B;AAVyB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { FlatList, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\n\r\nexport type IconPickerProps = {\r\n  icons?: string[];\r\n  onSelect?: (icon: string) => void;\r\n  selectedIcon?: string;\r\n};\r\n\r\nexport function IconPicker({\r\n  icons = [\r\n    \"account-circle\",\r\n    \"alarm\",\r\n    \"apps\",\r\n    \"attachment\",\r\n    \"autorenew\",\r\n    \"check\",\r\n    \"close\",\r\n    \"layers\",\r\n    \"star\",\r\n  ],\r\n  onSelect = (icon: string) => {},\r\n  selectedIcon = \"account-circle\",\r\n}: IconPickerProps) {\r\n  return (\r\n    <FlatList\r\n      data={icons}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity\r\n          style={[\r\n            styles.circle,\r\n            { borderColor: selectedIcon === item ? \"#eee\" : \"#fff\" },\r\n          ]}\r\n          onPress={() => {\r\n            onSelect(item);\r\n          }}\r\n        >\r\n          <Icon name={item} style={styles.icon} />\r\n        </TouchableOpacity>\r\n      )}\r\n      keyExtractor={(item, index) => \"key\" + index}\r\n      horizontal={true}\r\n      keyboardShouldPersistTaps=\"always\"\r\n      style={{ maxHeight: 75 }}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  circle: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    margin: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderWidth: 2,\r\n  },\r\n  icon: { color: \"#888\", fontSize: 24 },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}