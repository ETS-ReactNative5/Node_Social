{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport BottomTab from \"../Navigation/BottomNav\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport SwitchNav from \"../Navigation/SwitchNavOne\";\nimport { AuthContext } from \"../App\";\nimport { AppStyles } from \"../AppStyles\";\nimport * as Permissions from \"expo-permissions\";\nimport * as Notifications from \"expo-notifications\";\nimport URL from \"./url\";\nvar validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nvar url = URL();\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  Notifications.setNotificationHandler({\n    handleNotification: function handleNotification() {\n      return _regeneratorRuntime.async(function handleNotification$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", {\n                shouldShowAlert: true,\n                shouldPlaySound: false,\n                shouldSetBadge: false\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  });\n  var initialState = {\n    email: \"\",\n    password: \"\",\n    email_is_valid: true,\n    error: \"\",\n    emailerr: \"\",\n    passworderr: \"\"\n  };\n\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _React$useContext = React.useContext(AuthContext),\n      dispatch = _React$useContext.dispatch;\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      controlLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      expoPushToken = _React$useState6[0],\n      setExpoPushToken = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      notification = _React$useState8[0],\n      setNotification = _React$useState8[1];\n\n  function registerForPushNotificationsAsync() {\n    var _ref2, status, token;\n\n    return _regeneratorRuntime.async(function registerForPushNotificationsAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.NOTIFICATIONS));\n\n          case 2:\n            _ref2 = _context2.sent;\n            status = _ref2.status;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n          case 6:\n            token = _context2.sent;\n            return _context2.abrupt(\"return\", JSON.stringify(token));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  React.useEffect(function () {\n    registerForPushNotificationsAsync().then(function (token) {\n      return setExpoPushToken(token);\n    });\n  }, []);\n\n  var emailInputchange = function emailInputchange(val) {\n    if (validEmailRegex.test(val)) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email_is_valid: true\n        });\n      });\n    } else {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email_is_valid: false\n        });\n      });\n    }\n  };\n\n  var passwordInputchange = function passwordInputchange(val) {\n    if (val.trim().length >= 6) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password_is_valid: true\n        });\n      });\n    } else {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password_is_valid: false\n        });\n      });\n    }\n  };\n\n  var login = function login() {\n    var data = new FormData();\n    data.append(\"email\", state.email);\n    data.append(\"password\", state.password);\n    data.append(\"n_token\", expoPushToken);\n\n    if (state.email_is_valid == true && !state.email.trim().length == 0 && !state.password.trim().length == 0) {\n      controlLoading(true);\n      fetch(url + \"/code_reservoir/user_login.php\", {\n        method: \"POST\",\n        body: data\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        if (data.error == null) {\n          dispatch({\n            type: \"LOGIN\",\n            payload: data\n          });\n          controlLoading(false);\n          navigation.navigate(\"BottomTab\");\n        } else {\n          setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              error: data.error\n            });\n          });\n          controlLoading(false);\n        }\n      }).catch(function (err) {\n        alert(err);\n        controlLoading(false);\n      });\n    } else {\n      alert(\"Form is invalid\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, styles.leftTitle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"Sign In\"), React.createElement(View, {\n    style: styles.InputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.body,\n    placeholder: \"E-mail or phone number\",\n    onChangeText: function onChangeText(email) {\n      setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: email\n        });\n      });\n    },\n    value: state.email,\n    placeholderTextColor: AppStyles.color.grey,\n    underlineColorAndroid: \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  })), state.email_is_valid == false ? React.createElement(Text, {\n    style: {\n      color: \"red\",\n      fontSize: 14\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Please your email is not valid\") : null, React.createElement(Text, {\n    style: {\n      color: \"red\",\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, state.emailerr), React.createElement(View, {\n    style: styles.InputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.body,\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(password) {\n      return setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password: password\n        });\n      });\n    },\n    value: state.password,\n    placeholderTextColor: AppStyles.color.grey,\n    underlineColorAndroid: \"transparent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })), React.createElement(Text, {\n    style: {\n      color: \"red\",\n      fontSize: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, state.error), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 20\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"LoginScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"rgb(95, 32, 155)\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Forgot password?\")), !loading ? React.createElement(TouchableOpacity, {\n    style: styles.loginContainer,\n    onPress: login,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \"Log in\")) : React.createElement(TouchableOpacity, {\n    style: styles.loginContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"Loading...\")), React.createElement(TouchableOpacity, {\n    style: {\n      marginTop: 20\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"SignupScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"rgb(95, 32, 155)\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, \"Not a member?\")));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  or: {\n    fontFamily: AppStyles.fontName.main,\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 50,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"left\",\n    marginLeft: 20\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  myButton: {\n    backgroundColor: \"red\"\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n  loginText: {\n    color: AppStyles.color.white,\n    fontSize: 15,\n    fontWeight: \"bold\"\n  },\n  placeholder: {\n    fontFamily: AppStyles.fontName.text,\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/LoginScreen.js"],"names":["React","BottomTab","AsyncStorage","SwitchNav","AuthContext","AppStyles","Permissions","Notifications","URL","validEmailRegex","RegExp","url","LoginScreen","navigation","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","initialState","email","password","email_is_valid","error","emailerr","passworderr","useState","state","setState","useContext","dispatch","loading","controlLoading","expoPushToken","setExpoPushToken","notification","setNotification","registerForPushNotificationsAsync","getAsync","NOTIFICATIONS","status","getExpoPushTokenAsync","token","JSON","stringify","useEffect","then","emailInputchange","val","test","prevState","passwordInputchange","trim","length","password_is_valid","login","data","FormData","append","fetch","method","body","res","json","type","payload","navigate","catch","err","alert","styles","container","title","leftTitle","InputContainer","color","grey","fontSize","marginTop","loginContainer","loginText","StyleSheet","create","flex","alignItems","or","fontFamily","fontName","main","marginBottom","fontWeight","tint","alignSelf","textAlign","marginLeft","content","paddingLeft","paddingRight","text","myButton","backgroundColor","width","buttonWidth","borderRadius","padding","white","placeholder","textInputWidth","borderWidth","borderStyle","borderColor","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  TouchableOpacity,\n  Text,\n  View,\n  StyleSheet,\n  TextInput\n} from \"react-native\";\nimport BottomTab from \"../Navigation/BottomNav\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport SwitchNav from \"../Navigation/SwitchNavOne\";\nimport { AuthContext } from \"../App\";\nimport { AppStyles } from \"../AppStyles\";\nimport * as Permissions from \"expo-permissions\";\n//import getPermission from \"../utils/getPermission\";\nimport * as Notifications from \"expo-notifications\";\nimport URL from \"./url\";\n//I'm using this for email validation\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\nconst url = URL();\n\nconst LoginScreen = ({ navigation }) => {\n  Notifications.setNotificationHandler({\n    handleNotification: async () => ({\n      shouldShowAlert: true,\n      shouldPlaySound: false,\n      shouldSetBadge: false\n    })\n  });\n\n  const initialState = {\n    email: \"\",\n    password: \"\",\n    email_is_valid: true,\n    error: \"\", //Error from server\n    emailerr: \"\",\n    passworderr: \"\"\n  };\n\n  const [state, setState] = React.useState(initialState);\n  const { dispatch } = React.useContext(AuthContext);\n  const [loading, controlLoading] = React.useState(false);\n  const [expoPushToken, setExpoPushToken] = React.useState(\"\");\n  const [notification, setNotification] = React.useState(false);\n\n  async function registerForPushNotificationsAsync() {\n    const { status } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n\n    const token = await Notifications.getExpoPushTokenAsync();\n\n    return JSON.stringify(token);\n  }\n\n  React.useEffect(() => {\n    registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\n  }, []);\n\n  const emailInputchange = val => {\n    if (validEmailRegex.test(val)) {\n      setState(prevState => ({\n        ...prevState,\n        email_is_valid: true\n      }));\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        email_is_valid: false\n      }));\n    }\n  };\n\n  const passwordInputchange = val => {\n    if (val.trim().length >= 6) {\n      setState(prevState => ({\n        ...prevState,\n        password_is_valid: true\n      }));\n    } else {\n      setState(prevState => ({\n        ...prevState,\n        password_is_valid: false\n      }));\n    }\n  };\n\n  const login = () => {\n    const data = new FormData();\n    data.append(\"email\", state.email);\n    data.append(\"password\", state.password);\n    data.append(\"n_token\", expoPushToken);\n\n    if (\n      state.email_is_valid == true &&\n      !state.email.trim().length == 0 &&\n      !state.password.trim().length == 0\n    ) {\n      controlLoading(true);\n      fetch(`${url}/code_reservoir/user_login.php`, {\n        method: \"POST\",\n        body: data\n      })\n        .then(res => res.json())\n        .then(data => {\n          if (data.error == null) {\n            dispatch({\n              type: \"LOGIN\",\n              payload: data\n            });\n            controlLoading(false);\n            navigation.navigate(\"BottomTab\");\n          } else {\n            setState(prevState => ({\n              ...prevState,\n              error: data.error\n            }));\n            controlLoading(false);\n          }\n        })\n        .catch(err => {\n          alert(err);\n          controlLoading(false);\n        });\n    } else {\n      alert(\"Form is invalid\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.title, styles.leftTitle]}>Sign In</Text>\n      <View style={styles.InputContainer}>\n        <TextInput\n          style={styles.body}\n          placeholder=\"E-mail or phone number\"\n          onChangeText={email => {\n            setState(prevState => ({ ...prevState, email }));\n          }}\n          value={state.email}\n          placeholderTextColor={AppStyles.color.grey}\n          underlineColorAndroid=\"transparent\"\n        />\n      </View>\n      {state.email_is_valid == false ? (\n        <Text style={{ color: \"red\", fontSize: 14 }}>\n          Please your email is not valid\n        </Text>\n      ) : null}\n      <Text style={{ color: \"red\", fontSize: 15 }}>{state.emailerr}</Text>\n      <View style={styles.InputContainer}>\n        <TextInput\n          style={styles.body}\n          secureTextEntry={true}\n          placeholder=\"Password\"\n          onChangeText={password =>\n            setState(prevState => ({ ...prevState, password }))\n          }\n          value={state.password}\n          placeholderTextColor={AppStyles.color.grey}\n          underlineColorAndroid=\"transparent\"\n        />\n      </View>\n      <Text style={{ color: \"red\", fontSize: 15 }}>{state.error}</Text>\n\n      <TouchableOpacity\n        style={{ marginTop: 20 }}\n        onPress={() => navigation.navigate(\"LoginScreen\")}\n      >\n        <Text style={{ color: \"rgb(95, 32, 155)\" }}>Forgot password?</Text>\n      </TouchableOpacity>\n\n      {!loading ? (\n        <TouchableOpacity style={styles.loginContainer} onPress={login}>\n          <Text style={styles.loginText}>Log in</Text>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity style={styles.loginContainer}>\n          <Text style={styles.loginText}>Loading...</Text>\n        </TouchableOpacity>\n      )}\n\n      <TouchableOpacity\n        style={{ marginTop: 20 }}\n        onPress={() => navigation.navigate(\"SignupScreen\")}\n      >\n        <Text style={{ color: \"rgb(95, 32, 155)\" }}>Not a member?</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  or: {\n    fontFamily: AppStyles.fontName.main,\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 50,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"left\",\n    marginLeft: 20\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  myButton: {\n    backgroundColor: \"red\"\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n  loginText: {\n    color: AppStyles.color.white,\n    fontSize: 15,\n    fontWeight: \"bold\"\n  },\n  placeholder: {\n    fontFamily: AppStyles.fontName.text,\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  }\n});\n\n/*\nconst mapStateToProps = (state) => {\n    return { token: state.token,}\n };\n\n  \n\nconst mapDispatchToProps = dispatch => ({\n    login:dispatch(login)\n});\n\n export default connect(mapStateToProps,mapDispatchToProps)(Login);\n*/\n"]},"metadata":{},"sourceType":"module"}