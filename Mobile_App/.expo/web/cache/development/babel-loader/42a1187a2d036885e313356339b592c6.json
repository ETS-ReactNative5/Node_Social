{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-radio-buttons-group/lib/RadioGroup.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport _ from 'lodash';\nimport { RadioButton } from \"./index\";\nexport default function RadioGroup(_ref) {\n  var _this = this;\n\n  var _ref$layout = _ref.layout,\n      layout = _ref$layout === void 0 ? 'column' : _ref$layout,\n      onPress = _ref.onPress,\n      radioButtons = _ref.radioButtons;\n\n  var _useState = useState(radioButtons),\n      _useState2 = _slicedToArray(_useState, 2),\n      radioButtonsLocal = _useState2[0],\n      setRadioButtonsLocal = _useState2[1];\n\n  if (!_.isEqual(radioButtons, radioButtonsLocal)) {\n    setRadioButtonsLocal(radioButtons);\n  }\n\n  function handlePress(id) {\n    for (var _iterator = radioButtonsLocal, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var _button = _ref2;\n      if (_button.selected && _button.id === id) return;\n      _button.selected = _button.id === id;\n    }\n\n    setRadioButtonsLocal(_toConsumableArray(radioButtonsLocal));\n\n    if (onPress) {\n      onPress(radioButtonsLocal);\n    }\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: layout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, radioButtonsLocal.map(function (button) {\n    return React.createElement(RadioButton, _extends({}, button, {\n      key: button.id,\n      onPress: handlePress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-radio-buttons-group/lib/RadioGroup.tsx"],"names":["React","useState","_","RadioButton","RadioGroup","layout","onPress","radioButtons","radioButtonsLocal","setRadioButtonsLocal","isEqual","handlePress","id","button","selected","styles","container","flexDirection","map","StyleSheet","create","justifyContent","alignItems"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,WAAT;AAEA,eAAe,SAASC,UAAT,OAAmF;AAAA;;AAAA,yBAA7DC,MAA6D;AAAA,MAA7DA,MAA6D,4BAApD,QAAoD;AAAA,MAA1CC,OAA0C,QAA1CA,OAA0C;AAAA,MAAjCC,YAAiC,QAAjCA,YAAiC;;AAAA,kBAE9CN,QAAQ,CAAqBM,YAArB,CAFsC;AAAA;AAAA,MAEzFC,iBAFyF;AAAA,MAEtEC,oBAFsE;;AAIhG,MAAG,CAACP,CAAC,CAACQ,OAAF,CAAUH,YAAV,EAAwBC,iBAAxB,CAAJ,EAAgD;AAC9CC,IAAAA,oBAAoB,CAACF,YAAD,CAApB;AACD;;AAED,WAASI,WAAT,CAAqBC,EAArB,EAAiC;AAC/B,yBAAqBJ,iBAArB,kHAAwC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,UAA7BK,OAA6B;AACtC,UAAIA,OAAM,CAACC,QAAP,IAAmBD,OAAM,CAACD,EAAP,KAAcA,EAArC,EAAyC;AACzCC,MAAAA,OAAM,CAACC,QAAP,GAAkBD,OAAM,CAACD,EAAP,KAAcA,EAAhC;AACD;;AACDH,IAAAA,oBAAoB,oBAAKD,iBAAL,EAApB;;AACA,QAAIF,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACE,iBAAD,CAAP;AACD;AACF;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAEZ;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,iBAAiB,CAACU,GAAlB,CAAsB,UAACL,MAAD;AAAA,WACrB,oBAAC,WAAD,eACMA,MADN;AAEE,MAAA,GAAG,EAAEA,MAAM,CAACD,EAFd;AAGE,MAAA,OAAO,EAAED,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADqB;AAAA,GAAtB,CADH,CADF,CADF;AAaD;AAED,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,UAAU,EAAE;AAFH;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport _ from 'lodash';\n\nimport { RadioButton, RadioButtonProps, RadioGroupProps } from './index';\n\nexport default function RadioGroup({ layout = 'column', onPress, radioButtons }: RadioGroupProps) {\n\n  const [radioButtonsLocal, setRadioButtonsLocal] = useState<RadioButtonProps[]>(radioButtons);\n\n  if(!_.isEqual(radioButtons, radioButtonsLocal)) {\n    setRadioButtonsLocal(radioButtons);\n  }\n\n  function handlePress(id: string) {\n    for (const button of radioButtonsLocal) {\n      if (button.selected && button.id === id) return;\n      button.selected = button.id === id;\n    }\n    setRadioButtonsLocal([...radioButtonsLocal]);\n    if (onPress) {\n      onPress(radioButtonsLocal);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={{ flexDirection: layout }}>\n        {radioButtonsLocal.map((button) => (\n          <RadioButton\n            {...button}\n            key={button.id}\n            onPress={handlePress}\n          />\n        ))}\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}