{"ast":null,"code":"var _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-btr/src/Components/ColorPicker.tsx\";\nimport React from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nexport function ColorPicker(_ref) {\n  var _this = this;\n\n  var _ref$colors = _ref.colors,\n      colors = _ref$colors === void 0 ? [\"#F44336\", \"#E91E63\", \"#9C27B0\", \"#673AB7\", \"#3F51B5\", \"#2196F3\", \"#03A9F4\", \"#00BCD4\", \"#009688\", \"#4CAF50\", \"#8BC34A\", \"#CDDC39\", \"#FFEB3B\", \"#FFC107\", \"#FF9800\", \"#FF5722\", \"#795548\", \"#9E9E9E\", \"#607D8B\"] : _ref$colors,\n      _ref$onSelect = _ref.onSelect,\n      onSelect = _ref$onSelect === void 0 ? function (item) {} : _ref$onSelect,\n      _ref$selectedColor = _ref.selectedColor,\n      selectedColor = _ref$selectedColor === void 0 ? \"#F44336\" : _ref$selectedColor;\n  return React.createElement(FlatList, {\n    data: colors,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        style: [styles.circle, {\n          backgroundColor: item\n        }],\n        onPress: function onPress() {\n          onSelect(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, selectedColor === item && React.createElement(Icon, {\n        name: \"check\",\n        style: {\n          color: \"#fff\",\n          fontSize: 24\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return \"key\" + index;\n    },\n    horizontal: true,\n    keyboardShouldPersistTaps: \"always\",\n    style: {\n      maxHeight: 75\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  circle: {\n    width: 50,\n    height: 50,\n    borderRadius: 50,\n    margin: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-btr/src/Components/ColorPicker.tsx"],"names":["React","Icon","ColorPicker","colors","onSelect","item","selectedColor","styles","circle","backgroundColor","color","fontSize","index","maxHeight","StyleSheet","create","width","height","borderRadius","margin","justifyContent","alignItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,IAAP;AAQA,OAAO,SAASC,WAAT,OAwBc;AAAA;;AAAA,yBAvBnBC,MAuBmB;AAAA,MAvBnBA,MAuBmB,4BAvBV,CACP,SADO,EAEP,SAFO,EAGP,SAHO,EAIP,SAJO,EAKP,SALO,EAMP,SANO,EAOP,SAPO,EAQP,SARO,EASP,SATO,EAUP,SAVO,EAWP,SAXO,EAYP,SAZO,EAaP,SAbO,EAcP,SAdO,EAeP,SAfO,EAgBP,SAhBO,EAiBP,SAjBO,EAkBP,SAlBO,EAmBP,SAnBO,CAuBU;AAAA,2BAFnBC,QAEmB;AAAA,MAFnBA,QAEmB,8BAFR,UAACC,IAAD,EAAkB,CAAE,CAEZ;AAAA,gCADnBC,aACmB;AAAA,MADnBA,aACmB,mCADH,SACG;AACnB,SACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEH,MADR;AAEE,IAAA,UAAU,EAAE;AAAA,UAAGE,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE,CAACE,MAAM,CAACC,MAAR,EAAgB;AAAEC,UAAAA,eAAe,EAAEJ;AAAnB,SAAhB,CADT;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbD,UAAAA,QAAQ,CAACC,IAAD,CAAR;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGC,aAAa,KAAKD,IAAlB,IACC,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,QAAQ,EAAE;AAA3B,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CADU;AAAA,KAFd;AAcE,IAAA,YAAY,EAAE,sBAACN,IAAD,EAAOO,KAAP;AAAA,aAAiB,QAAQA,KAAzB;AAAA,KAdhB;AAeE,IAAA,UAAU,EAAE,IAfd;AAgBE,IAAA,yBAAyB,EAAC,QAhB5B;AAiBE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAjBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAqBD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNC,IAAAA,cAAc,EAAE,QALV;AAMNC,IAAAA,UAAU,EAAE;AANN;AADuB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { FlatList, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\n\r\nexport type ColorPickerProps = {\r\n  colors?: string[];\r\n  onSelect?: (item: string) => void;\r\n  selectedColor?: string;\r\n};\r\n\r\nexport function ColorPicker({\r\n  colors = [\r\n    \"#F44336\",\r\n    \"#E91E63\",\r\n    \"#9C27B0\",\r\n    \"#673AB7\",\r\n    \"#3F51B5\",\r\n    \"#2196F3\",\r\n    \"#03A9F4\",\r\n    \"#00BCD4\",\r\n    \"#009688\",\r\n    \"#4CAF50\",\r\n    \"#8BC34A\",\r\n    \"#CDDC39\",\r\n    \"#FFEB3B\",\r\n    \"#FFC107\",\r\n    \"#FF9800\",\r\n    \"#FF5722\",\r\n    \"#795548\",\r\n    \"#9E9E9E\",\r\n    \"#607D8B\",\r\n  ],\r\n  onSelect = (item: string) => {},\r\n  selectedColor = \"#F44336\",\r\n}: ColorPickerProps) {\r\n  return (\r\n    <FlatList\r\n      data={colors}\r\n      renderItem={({ item }) => (\r\n        <TouchableOpacity\r\n          style={[styles.circle, { backgroundColor: item }]}\r\n          onPress={() => {\r\n            onSelect(item);\r\n          }}\r\n        >\r\n          {selectedColor === item && (\r\n            <Icon name=\"check\" style={{ color: \"#fff\", fontSize: 24 }} />\r\n          )}\r\n        </TouchableOpacity>\r\n      )}\r\n      keyExtractor={(item, index) => \"key\" + index}\r\n      horizontal={true}\r\n      keyboardShouldPersistTaps=\"always\"\r\n      style={{ maxHeight: 75 }}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  circle: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 50,\r\n    margin: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}