{"ast":null,"code":"var _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-btr/src/Components/ModalInput.tsx\";\nimport React from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport function ModalInput(_ref) {\n  var children = _ref.children,\n      _ref$onCancel = _ref.onCancel,\n      onCancel = _ref$onCancel === void 0 ? function () {\n    return alert(\"Cancel Pressed\");\n  } : _ref$onCancel,\n      _ref$onOk = _ref.onOk,\n      onOk = _ref$onOk === void 0 ? function () {\n    return alert(\"Ok Pressed\");\n  } : _ref$onOk;\n  return React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: true,\n    onRequestClose: function onRequestClose() {\n      return null;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, children, React.createElement(View, {\n    style: styles.actionsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.action,\n    onPress: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"CANCEL\")), React.createElement(TouchableOpacity, {\n    style: styles.action,\n    onPress: onOk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"OK\")))))));\n}\nvar screenWidth = Dimensions.get(\"window\").width;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#0004\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  card: {\n    width: screenWidth - 40,\n    backgroundColor: \"#fff\"\n  },\n  actionsContainer: {\n    flexDirection: \"row\",\n    borderTopWidth: 1,\n    borderColor: \"#eee\"\n  },\n  action: {\n    flex: 1,\n    padding: 15,\n    alignItems: \"center\",\n    borderRightWidth: 1,\n    borderColor: \"#eee\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-btr/src/Components/ModalInput.tsx"],"names":["React","ModalInput","children","onCancel","alert","onOk","styles","container","card","actionsContainer","action","screenWidth","Dimensions","get","width","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","borderTopWidth","borderColor","padding","borderRightWidth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAoBA,OAAO,SAASC,UAAT,OAIG;AAAA,MAHRC,QAGQ,QAHRA,QAGQ;AAAA,2BAFRC,QAEQ;AAAA,MAFRA,QAEQ,8BAFG;AAAA,WAAMC,KAAK,CAAC,gBAAD,CAAX;AAAA,GAEH;AAAA,uBADRC,IACQ;AAAA,MADRA,IACQ,0BADD;AAAA,WAAMD,KAAK,CAAC,YAAD,CAAX;AAAA,GACC;AACR,SACE,oBAAC,KAAD;AACE,IAAA,aAAa,EAAC,MADhB;AAEE,IAAA,WAAW,EAAE,IAFf;AAGE,IAAA,OAAO,EAAE,IAHX;AAIE,IAAA,cAAc,EAAE;AAAA,aAAM,IAAN;AAAA,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,yBAAyB,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,QADH,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACG,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEH,MAAM,CAACI,MAAhC;AAAwC,IAAA,OAAO,EAAEP,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEG,MAAM,CAACI,MAAhC;AAAwC,IAAA,OAAO,EAAEL,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAJF,CAFF,CADF,CADF,CANF,CADF;AAwBD;AAED,IAAMM,WAAW,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA7C;AAEA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTU,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,OAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BZ,EAAAA,IAAI,EAAE;AACJM,IAAAA,KAAK,EAAEH,WAAW,GAAG,EADjB;AAEJO,IAAAA,eAAe,EAAE;AAFb,GAPyB;AAW/BT,EAAAA,gBAAgB,EAAE;AAChBY,IAAAA,aAAa,EAAE,KADC;AAEhBC,IAAAA,cAAc,EAAE,CAFA;AAGhBC,IAAAA,WAAW,EAAE;AAHG,GAXa;AAgB/Bb,EAAAA,MAAM,EAAE;AACNO,IAAAA,IAAI,EAAE,CADA;AAENO,IAAAA,OAAO,EAAE,EAFH;AAGNL,IAAAA,UAAU,EAAE,QAHN;AAINM,IAAAA,gBAAgB,EAAE,CAJZ;AAKNF,IAAAA,WAAW,EAAE;AALP;AAhBuB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Dimensions,\r\n  Modal,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n} from \"react-native\";\r\n\r\nexport type ModalInputProps = {\r\n  onCancel?: () => void;\r\n  onOk?: () => void;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactChild | React.ReactChild[];\r\n} & ModalInputProps;\r\n\r\nexport function ModalInput({\r\n  children,\r\n  onCancel = () => alert(\"Cancel Pressed\"),\r\n  onOk = () => alert(\"Ok Pressed\"),\r\n}: Props) {\r\n  return (\r\n    <Modal\r\n      animationType=\"fade\"\r\n      transparent={true}\r\n      visible={true}\r\n      onRequestClose={() => null}\r\n    >\r\n      <View style={styles.container}>\r\n        <View style={styles.card}>\r\n          <ScrollView keyboardShouldPersistTaps=\"always\">\r\n            {children}\r\n            <View style={styles.actionsContainer}>\r\n              <TouchableOpacity style={styles.action} onPress={onCancel}>\r\n                <Text>CANCEL</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.action} onPress={onOk}>\r\n                <Text>OK</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst screenWidth = Dimensions.get(\"window\").width;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#0004\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    width: screenWidth - 40,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  actionsContainer: {\r\n    flexDirection: \"row\",\r\n    borderTopWidth: 1,\r\n    borderColor: \"#eee\",\r\n  },\r\n  action: {\r\n    flex: 1,\r\n    padding: 15,\r\n    alignItems: \"center\",\r\n    borderRightWidth: 1,\r\n    borderColor: \"#eee\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}