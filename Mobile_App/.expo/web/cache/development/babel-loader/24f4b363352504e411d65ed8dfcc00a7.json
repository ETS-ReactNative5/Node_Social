{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/UpdateUserImg.js\";\n\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport HeaderButtons from \"react-navigation-header-buttons\";\nimport { Header } from \"react-native-elements\";\nimport { AuthContext } from \"../App\";\n\nvar io = require(\"socket.io-client\");\n\nvar socket = io(\"http://10.74.14.80:5000\", {\n  transports: [\"websocket\"]\n});\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport jwt_decode from \"jwt-decode\";\n\nvar UpdateUserImg = function UpdateUserImg(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var MyContext = React.createContext(MyContext);\n\n  var _React$useContext = React.useContext(AuthContext),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var url = state.url;\n  var initialState = {\n    user_img: \"\"\n  };\n\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mystate = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      controlLoading = _React$useState4[1];\n\n  var token = state.token;\n  var decoded = jwt_decode(token);\n  var user_id = decoded;\n\n  var update_user_img = function update_user_img() {\n    controlLoading(true);\n    var uri = route.params.image;\n    var uriParts = route.params.image.split(\".\");\n    var filename = uri.split(\"/\").pop();\n    var fileType = uriParts[uriParts.length - 1];\n    var data = new FormData();\n    data.append(\"user_img\", {\n      uri: uri,\n      name: \"\" + filename,\n      type: \"image/\" + fileType\n    });\n    data.append(\"token\", state.token);\n    fetch(url + \"/code_reservoir/update_user_img.php\", {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      controlLoading(false);\n      navigation.navigate(\"Profile\");\n      navigation.navigate(\"SingleProfile\");\n    }).catch(function (err) {\n      controlLoading(false);\n      alert(err);\n    });\n  };\n\n  var image = route.params.image;\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(View, {\n    style: styles.modalWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../Images/loader5.gif\"),\n    style: {\n      height: 100,\n      width: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })) : null, React.createElement(Header, {\n    placement: \"left\",\n    leftComponent: React.createElement(Icon, {\n      name: \"close-outline\",\n      size: 35,\n      color: \"black\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }),\n    rightComponent: React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return update_user_img();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      name: \"checkmark-circle-outline\",\n      size: 35,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })),\n    containerStyle: {\n      backgroundColor: \"#fff\",\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: \"\" + route.params.image\n    },\n    style: styles.myImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: {\n      alignSelf: \"center\",\n      fontWeight: \"bold\",\n      fontSize: 20,\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Profile Picture\"), React.createElement(View, {\n    style: styles.postContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default UpdateUserImg;\nvar styles = StyleSheet.create({\n  myImage: {\n    width: 220,\n    height: 220,\n    borderRadius: 220,\n    marginTop: -50,\n    borderWidth: 3,\n    borderColor: \"#fff\",\n    marginTop: 100,\n    alignSelf: \"center\"\n  },\n  input: {\n    marginTop: 100,\n    paddingTop: 20,\n    fontSize: 20,\n    paddingLeft: 10\n  },\n  myHeader: {\n    width: \"100%\",\n    paddingTop: 40,\n    paddingBottom: 30,\n    backgroundColor: \"#fff\"\n  },\n  postContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  postButton: {\n    backgroundColor: \"#fff\",\n    borderWidth: 1,\n    borderRadius: 10,\n    width: 70,\n    height: 30,\n    borderColor: \"#333\",\n    color: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalWrapper: {\n    height: HEIGHT,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/UpdateUserImg.js"],"names":["Icon","React","AsyncStorage","HeaderButtons","Header","AuthContext","io","require","socket","transports","WIDTH","Dimensions","get","width","HEIGHT","height","jwt_decode","UpdateUserImg","route","navigation","MyContext","createContext","useContext","state","dispatch","url","initialState","user_img","useState","mystate","setState","loading","controlLoading","token","decoded","user_id","update_user_img","uri","params","image","uriParts","split","filename","pop","fileType","length","data","FormData","append","name","type","fetch","method","body","headers","then","res","json","navigate","catch","err","alert","styles","modalWrapper","goBack","backgroundColor","myImage","alignSelf","fontWeight","fontSize","marginTop","postContainer","StyleSheet","create","borderRadius","borderWidth","borderColor","input","paddingTop","paddingLeft","myHeader","paddingBottom","display","alignItems","postButton","color","justifyContent"],"mappings":"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","sourcesContent":["import Icon from \"react-native-vector-icons/Ionicons\";\nimport React from \"react\";\nimport {\n  Image,\n  TextInput,\n  Text,\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  TouchableOpacity\n} from \"react-native\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport HeaderButtons from \"react-navigation-header-buttons\";\nimport { Header } from \"react-native-elements\";\nimport { AuthContext } from \"../App\";\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io(\"http://10.74.14.80:5000\", {\n  transports: [\"websocket\"]\n});\n\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\n\nimport jwt_decode from \"jwt-decode\";\n\nconst UpdateUserImg = ({ route, navigation }) => {\n  const MyContext = React.createContext(MyContext);\n  const { state, dispatch } = React.useContext(AuthContext);\n  let url = state.url;\n  const initialState = {\n    user_img: \"\"\n  };\n  const [mystate, setState] = React.useState(initialState);\n  const [loading, controlLoading] = React.useState(false);\n\n  const token = state.token;\n  const decoded = jwt_decode(token);\n  const user_id = decoded;\n\n  const update_user_img = () => {\n    controlLoading(true);\n\n    let uri = route.params.image;\n    let uriParts = route.params.image.split(\".\");\n    let filename = uri.split(\"/\").pop();\n    let fileType = uriParts[uriParts.length - 1];\n    const data = new FormData();\n    data.append(\"user_img\", {\n      uri,\n      name: `${filename}`,\n      type: `image/${fileType}`\n    });\n    data.append(\"token\", state.token);\n\n    fetch(`${url}/code_reservoir/update_user_img.php`, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        controlLoading(false);\n        navigation.navigate(\"Profile\");\n        navigation.navigate(\"SingleProfile\");\n      })\n      .catch(err => {\n        controlLoading(false);\n        alert(err);\n      });\n  };\n\n  //state = { text: '' };\n\n  const { image } = route.params;\n  return (\n    <View>\n      {loading ? (\n        <View style={styles.modalWrapper}>\n          <Image\n            source={require(\"../Images/loader5.gif\")}\n            style={{ height: 100, width: 100 }}\n          />\n        </View>\n      ) : null}\n      <Header\n        placement=\"left\"\n        leftComponent={\n          <Icon\n            name=\"close-outline\"\n            size={35}\n            color=\"black\"\n            onPress={() => navigation.goBack()}\n          />\n        }\n        rightComponent={\n          <TouchableOpacity onPress={() => update_user_img()}>\n            <Icon name=\"checkmark-circle-outline\" size={35} color=\"black\" />\n          </TouchableOpacity>\n        }\n        containerStyle={{\n          backgroundColor: \"#fff\",\n          //justifyContent: 'space-around',\n          height: 100\n        }}\n      />\n      <ScrollView>\n        <View>\n          <Image\n            source={{ uri: `${route.params.image}` }}\n            style={styles.myImage}\n          />\n          <Text\n            style={{\n              alignSelf: \"center\",\n              fontWeight: \"bold\",\n              fontSize: 20,\n              marginTop: 20\n            }}\n          >\n            Profile Picture\n          </Text>\n          <View style={styles.postContainer}></View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default UpdateUserImg;\n\nconst styles = StyleSheet.create({\n  myImage: {\n    width: 220,\n    height: 220,\n    borderRadius: 220,\n    marginTop: -50,\n    borderWidth: 3,\n    borderColor: \"#fff\",\n    marginTop: 100,\n    alignSelf: \"center\"\n  },\n  input: {\n    marginTop: 100,\n    paddingTop: 20,\n    fontSize: 20,\n    paddingLeft: 10\n  },\n\n  myHeader: {\n    width: \"100%\",\n    paddingTop: 40,\n    paddingBottom: 30,\n    backgroundColor: \"#fff\"\n  },\n\n  postContainer: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  postButton: {\n    backgroundColor: \"#fff\",\n    borderWidth: 1,\n    borderRadius: 10,\n    width: 70,\n    height: 30,\n    borderColor: \"#333\",\n    color: \"#fff\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n\n  modalWrapper: {\n    height: HEIGHT,\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}