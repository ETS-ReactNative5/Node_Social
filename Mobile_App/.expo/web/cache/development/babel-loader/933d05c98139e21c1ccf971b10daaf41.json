{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from \"react\";\nimport \"react-native-gesture-handler\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport BottomTab from \"./Navigation/BottomNav\";\nimport SwitchNavOne from \"./Navigation/SwitchNavOne\";\nimport SwitchNavTwo from \"./Navigation/SwitchNavTwo\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainStackNavigatorOne from \"./Navigation/StackNavigationOne\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport URL from \"./Screens/url\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nexport var AuthContext = React.createContext();\nconsole.disableYellowBox = true;\n\nvar App = function App() {\n  var initialState = {\n    isAuthenticated: false,\n    token: null,\n    isLoading: true,\n    messages: [],\n    myprofile: [],\n    myposts: [],\n    singleprofile: [],\n    userposts: [],\n    url: URL()\n  };\n\n  var ReducerFunction = function ReducerFunction(prevState, action) {\n    switch (action.type) {\n      case \"LOGIN\":\n        AsyncStorage.setItem(\"token\", action.payload);\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isAuthenticated: true,\n          token: action.payload,\n          isLoading: false\n        });\n\n      case \"LOGOUT\":\n        AsyncStorage.removeItem(\"token\");\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isAuthenticated: false,\n          token: null,\n          isLoading: false\n        });\n\n      case \"FETCH_PROFILE\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          myprofile: action.payload\n        });\n\n      case \"FETCH_POSTS\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          myposts: action.payload\n        });\n\n      case \"FETCH_SINGLE_PROFILE\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          singleprofile: action.payload\n        });\n\n      case \"FETCH_USER_POSTS\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userposts: action.payload\n        });\n\n      default:\n        return prevState;\n    }\n  };\n\n  var bootstrapAsync = function bootstrapAsync() {\n    var token;\n    return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"token\"));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              dispatch({\n                type: \"LOGIN\",\n                payload: token\n              });\n            } else {\n              dispatch({\n                type: \"LOGOUT\"\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _React$useReducer = React.useReducer(ReducerFunction, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    bootstrapAsync();\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, state.isLoading ? React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      marginTop: HEIGHT / 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"./Images/launcher.png\"),\n    style: {\n      height: 200,\n      width: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  })) : state.isAuthenticated ? React.createElement(BottomTab, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }) : React.createElement(MainStackNavigatorOne, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/App.js"],"names":["React","BottomTab","SwitchNavOne","SwitchNavTwo","NavigationContainer","MainStackNavigatorOne","AsyncStorage","URL","WIDTH","Dimensions","get","width","HEIGHT","height","AuthContext","createContext","console","disableYellowBox","App","initialState","isAuthenticated","token","isLoading","messages","myprofile","myposts","singleprofile","userposts","url","ReducerFunction","prevState","action","type","setItem","payload","removeItem","bootstrapAsync","getItem","dispatch","useReducer","state","useEffect","alignItems","marginTop","require"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport \"react-native-gesture-handler\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Dimensions,\n  ActivityIndicator,\n  TouchableOpacity,\n  Image\n} from \"react-native\";\nimport BottomTab from \"./Navigation/BottomNav\";\nimport SwitchNavOne from \"./Navigation/SwitchNavOne\";\nimport SwitchNavTwo from \"./Navigation/SwitchNavTwo\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport MainStackNavigatorOne from \"./Navigation/StackNavigationOne\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport URL from \"./Screens/url\";\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\n\nexport const AuthContext = React.createContext();\n\n//For disabling the warnings\nconsole.disableYellowBox = true;\n\nconst App = () => {\n  //User auth state stuff\n  const initialState = {\n    isAuthenticated: false,\n    token: null,\n    isLoading: true,\n    messages: [],\n    myprofile: [],\n    myposts: [],\n    singleprofile: [],\n    userposts: [],\n    url: URL()\n  };\n\n  const ReducerFunction = (prevState, action) => {\n    switch (action.type) {\n      case \"LOGIN\":\n        AsyncStorage.setItem(\"token\", action.payload);\n        return {\n          ...prevState,\n          isAuthenticated: true,\n          token: action.payload,\n          isLoading: false\n        };\n      case \"LOGOUT\":\n        AsyncStorage.removeItem(\"token\");\n        return {\n          ...prevState,\n          isAuthenticated: false,\n          token: null,\n          isLoading: false\n        };\n      case \"FETCH_PROFILE\":\n        return {\n          ...prevState,\n          myprofile: action.payload\n        };\n      case \"FETCH_POSTS\":\n        return {\n          ...prevState,\n          myposts: action.payload\n        };\n      case \"FETCH_SINGLE_PROFILE\":\n        return {\n          ...prevState,\n          singleprofile: action.payload\n        };\n      case \"FETCH_USER_POSTS\":\n        return {\n          ...prevState,\n          userposts: action.payload\n        };\n      default:\n        return prevState;\n    }\n  };\n\n  const bootstrapAsync = async () => {\n    const token = await AsyncStorage.getItem(\"token\");\n    if (token) {\n      dispatch({\n        type: \"LOGIN\",\n        payload: token\n      });\n    } else {\n      dispatch({\n        type: \"LOGOUT\"\n      });\n    }\n  };\n\n  const [state, dispatch] = React.useReducer(ReducerFunction, initialState);\n\n  React.useEffect(() => {\n    bootstrapAsync();\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ state, dispatch }}>\n      {state.isLoading ? (\n        <View style={{ alignItems: \"center\", marginTop: HEIGHT / 3 }}>\n          <Image\n            source={require(\"./Images/launcher.png\")}\n            style={{ height: 200, width: 200 }}\n          />\n        </View>\n      ) : state.isAuthenticated ? (\n        <BottomTab />\n      ) : (\n        <MainStackNavigatorOne />\n      )}\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}