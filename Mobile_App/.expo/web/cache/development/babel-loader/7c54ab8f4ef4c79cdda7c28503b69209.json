{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/SignupScreen.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport BottomTab from \"../Navigation/BottomNav\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport SwitchNav from \"../Navigation/SwitchNavOne\";\nimport { AppStyles } from \"../AppStyles\";\nimport URL from \"./url\";\nvar validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nvar url = URL();\n\nvar SignupScreen = function (_React$Component) {\n  _inherits(SignupScreen, _React$Component);\n\n  var _super = _createSuper(SignupScreen);\n\n  function SignupScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SignupScreen);\n\n    _this = _super.call(this, props);\n\n    _this.nameInputChange = function (val) {\n      if (val.trim().length >= 6) {\n        _this.setState({\n          name_is_valid: true,\n          form_is_valid: true\n        });\n      } else {\n        _this.setState({\n          name_is_valid: false,\n          form_is_valid: false\n        });\n      }\n    };\n\n    _this.emailInputchange = function (val) {\n      if (validEmailRegex.test(val)) {\n        _this.setState({\n          email_is_valid: true\n        });\n      } else {\n        _this.setState({\n          email_is_valid: false\n        });\n      }\n    };\n\n    _this.passwordInputchange = function (val) {\n      if (val.trim().length >= 6) {\n        _this.setState({\n          password_is_valid: true\n        });\n      } else {\n        _this.setState({\n          password_is_valid: false\n        });\n      }\n    };\n\n    _this.signup = function () {\n      var data = new FormData();\n      data.append(\"name\", _this.state.name);\n      data.append(\"email\", _this.state.email);\n      data.append(\"password\", _this.state.password);\n\n      if (_this.state.name_is_valid == true && _this.state.email_is_valid == true && _this.state.password_is_valid == true && !_this.state.name.trim().length == 0 && !_this.state.email.trim().length == 0 && !_this.state.password.trim().length == 0) {\n        _this.setState({\n          loading: true\n        });\n\n        fetch(url + \"/code_reservoir/user_signup.php\", {\n          method: \"POST\",\n          body: data\n        }).then(function (res) {\n          return res.json();\n        }).then(function (data) {\n          _this.setState({\n            loading: false\n          });\n\n          if (data.error == null) {\n            alert(data.message);\n\n            _this.props.navigation.navigate(\"LoginScreen\");\n          } else {\n            _this.setState({\n              error: !_this.state.error,\n              loading: false\n            });\n          }\n        }).catch(function (err) {\n          console.log(err);\n\n          _this.setState({\n            loading: false\n          });\n        });\n      } else {\n        alert(\"Form is invalid\");\n      }\n    };\n\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      name_is_valid: true,\n      email_is_valid: true,\n      password_is_valid: true,\n      form_is_valid: true,\n      error: false,\n      message: \"\",\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(SignupScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.title, styles.leftTitle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, \"Sign Up\"), React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        placeholder: \"Name\",\n        onChangeText: function onChangeText(name) {\n          _this2.nameInputChange(name);\n\n          _this2.setState({\n            name: name\n          });\n        },\n        value: this.state.name,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      })), this.state.name_is_valid == false ? React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, \"Name must not be less than 6 characters\") : null, React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        placeholder: \"Email \",\n        onChangeText: function onChangeText(email) {\n          _this2.emailInputchange(email);\n\n          _this2.setState({\n            email: email\n          });\n        },\n        value: this.state.email,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      })), this.state.error == true ? React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, \"User with email already exists\") : null, this.state.email_is_valid == false ? React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, \"Please your email is not valid\") : null, React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(password) {\n          _this2.passwordInputchange(password);\n\n          _this2.setState({\n            password: password\n          });\n        },\n        value: this.state.password,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      })), this.state.password_is_valid == false ? React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontSize: 14\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, \"Password must not be less than 6 characters\") : null, this.state.loading == false ? React.createElement(TouchableOpacity, {\n        style: styles.loginContainer,\n        onPress: this.signup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }\n      }, \"Sign up\")) : React.createElement(TouchableOpacity, {\n        style: styles.loginContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, \"Loading...\")), React.createElement(TouchableOpacity, {\n        style: {\n          marginTop: 20\n        },\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate(\"LoginScreen\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"rgb(95, 32, 155)\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }\n      }, \"Already a member?\")));\n    }\n  }]);\n\n  return SignupScreen;\n}(React.Component);\n\nexport default SignupScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  or: {\n    fontFamily: AppStyles.fontName.main,\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 50,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"left\",\n    marginLeft: 20\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  myButton: {\n    backgroundColor: \"red\"\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n  loginText: {\n    color: AppStyles.color.white,\n    fontSize: 15,\n    fontWeight: \"bold\"\n  },\n  loginLoader: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: \"#fff\",\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n  placeholder: {\n    fontFamily: AppStyles.fontName.text,\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/SignupScreen.js"],"names":["React","BottomTab","AsyncStorage","SwitchNav","AppStyles","URL","validEmailRegex","RegExp","url","SignupScreen","props","nameInputChange","val","trim","length","setState","name_is_valid","form_is_valid","emailInputchange","test","email_is_valid","passwordInputchange","password_is_valid","signup","data","FormData","append","state","name","email","password","loading","fetch","method","body","then","res","json","error","alert","message","navigation","navigate","catch","err","console","log","styles","container","title","leftTitle","InputContainer","color","grey","fontSize","loginContainer","loginText","marginTop","Component","StyleSheet","create","flex","alignItems","or","fontFamily","fontName","main","marginBottom","fontWeight","tint","alignSelf","textAlign","marginLeft","content","paddingLeft","paddingRight","text","myButton","backgroundColor","width","buttonWidth","borderRadius","padding","white","loginLoader","placeholder","textInputWidth","borderWidth","borderStyle","borderColor","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  TouchableOpacity,\n  Text,\n  View,\n  StyleSheet,\n  TextInput,\n  Image\n} from \"react-native\";\nimport BottomTab from \"../Navigation/BottomNav\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport SwitchNav from \"../Navigation/SwitchNavOne\";\nimport { AppStyles } from \"../AppStyles\";\nimport URL from \"./url\";\n//I'm using this for email validation\nconst validEmailRegex = RegExp(\n  /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n);\n\nlet url = URL();\n\nclass SignupScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      name_is_valid: true,\n      email_is_valid: true,\n      password_is_valid: true,\n      form_is_valid: true,\n      error: false, //Error  from server is false\n      message: \"\", //Success message from server\n      loading: false\n    };\n  }\n\n  nameInputChange = val => {\n    if (val.trim().length >= 6) {\n      this.setState({\n        name_is_valid: true,\n        form_is_valid: true\n      });\n    } else {\n      this.setState({\n        name_is_valid: false,\n        form_is_valid: false\n      });\n    }\n  };\n\n  emailInputchange = val => {\n    if (validEmailRegex.test(val)) {\n      this.setState({\n        email_is_valid: true\n      });\n    } else {\n      this.setState({\n        email_is_valid: false\n      });\n    }\n  };\n\n  passwordInputchange = val => {\n    if (val.trim().length >= 6) {\n      this.setState({\n        password_is_valid: true\n      });\n    } else {\n      this.setState({\n        password_is_valid: false\n      });\n    }\n  };\n\n  signup = () => {\n    const data = new FormData();\n    data.append(\"name\", this.state.name);\n    data.append(\"email\", this.state.email);\n    data.append(\"password\", this.state.password);\n\n    if (\n      this.state.name_is_valid == true &&\n      this.state.email_is_valid == true &&\n      this.state.password_is_valid == true &&\n      !this.state.name.trim().length == 0 &&\n      !this.state.email.trim().length == 0 &&\n      !this.state.password.trim().length == 0\n    ) {\n      this.setState({\n        loading: true\n      });\n      fetch(`${url}/code_reservoir/user_signup.php`, {\n        method: \"POST\",\n        body: data\n      })\n        .then(res => res.json())\n        .then(data => {\n          this.setState({\n            loading: false\n          });\n\n          if (data.error == null) {\n            alert(data.message);\n            this.props.navigation.navigate(\"LoginScreen\");\n          } else {\n            this.setState({ error: !this.state.error, loading: false });\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({ loading: false });\n        });\n    } else {\n      alert(\"Form is invalid\");\n    }\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={[styles.title, styles.leftTitle]}>Sign Up</Text>\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            placeholder=\"Name\"\n            onChangeText={name => {\n              this.nameInputChange(name);\n              this.setState({ name });\n            }}\n            value={this.state.name}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        {this.state.name_is_valid == false ? (\n          <Text style={{ color: \"red\", fontSize: 14 }}>\n            Name must not be less than 6 characters\n          </Text>\n        ) : null}\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            placeholder=\"Email \"\n            onChangeText={email => {\n              this.emailInputchange(email);\n              this.setState({ email });\n            }}\n            value={this.state.email}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        {this.state.error == true ? (\n          <Text style={{ color: \"red\", fontSize: 14 }}>\n            User with email already exists\n          </Text>\n        ) : null}\n\n        {this.state.email_is_valid == false ? (\n          <Text style={{ color: \"red\", fontSize: 14 }}>\n            Please your email is not valid\n          </Text>\n        ) : null}\n\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            secureTextEntry={true}\n            placeholder=\"Password\"\n            onChangeText={password => {\n              this.passwordInputchange(password);\n              this.setState({ password });\n            }}\n            value={this.state.password}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        {this.state.password_is_valid == false ? (\n          <Text style={{ color: \"red\", fontSize: 14 }}>\n            Password must not be less than 6 characters\n          </Text>\n        ) : null}\n        {this.state.loading == false ? (\n          <TouchableOpacity style={styles.loginContainer} onPress={this.signup}>\n            <Text style={styles.loginText}>Sign up</Text>\n          </TouchableOpacity>\n        ) : (\n          <TouchableOpacity style={styles.loginContainer}>\n            <Text style={styles.loginText}>Loading...</Text>\n          </TouchableOpacity>\n        )}\n        <TouchableOpacity\n          style={{ marginTop: 20 }}\n          onPress={() => this.props.navigation.navigate(\"LoginScreen\")}\n        >\n          <Text style={{ color: \"rgb(95, 32, 155)\" }}>Already a member?</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n\nexport default SignupScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  or: {\n    fontFamily: AppStyles.fontName.main,\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 50,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"left\",\n    marginLeft: 20\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  myButton: {\n    backgroundColor: \"red\"\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n  loginText: {\n    color: AppStyles.color.white,\n    fontSize: 15,\n    fontWeight: \"bold\"\n  },\n\n  loginLoader: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: \"#fff\",\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30,\n    alignItems: \"center\"\n  },\n\n  placeholder: {\n    fontFamily: AppStyles.fontName.text,\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  }\n});\n\n/*\nconst mapStateToProps = (state) => {\n    return { token: state.token,}\n };\n\n  \n\nconst mapDispatchToProps = dispatch => ({\n    login:dispatch(login)\n});\n\n export default connect(mapStateToProps,mapDispatchToProps)(Login);\n*/\n"]},"metadata":{},"sourceType":"module"}