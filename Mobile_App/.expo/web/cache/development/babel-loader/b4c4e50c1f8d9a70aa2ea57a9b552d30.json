{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/ChooseCoverPhoto.js\";\n\nfunction _createSuper(Derived) {\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nimport { Constants } from \"expo\";\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport getPermission from \"../utils/getPermission\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nvar options = {\n  allowsEditing: true\n};\n\nvar ChooseCoverPhoto = function (_Component) {\n  _inherits(ChooseCoverPhoto, _Component);\n\n  var _super = _createSuper(ChooseCoverPhoto);\n\n  function ChooseCoverPhoto() {\n    var _this;\n\n    _classCallCheck(this, ChooseCoverPhoto);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this._selectPhoto = function _callee() {\n      var status, result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getPermission(Permissions.CAMERA_ROLL));\n\n            case 2:\n              status = _context.sent;\n\n              if (!status) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync(options));\n\n            case 6:\n              result = _context.sent;\n\n              if (result.cancelled) {\n                _context.next = 10;\n                break;\n              }\n\n              _this.props.navigation.navigate(\"UpdateCoverPhoto\", {\n                image: result.uri\n              });\n\n              return _context.abrupt(\"return\", React.createElement(Image, {\n                source: {\n                  uri: \"\" + result.uri\n                },\n                style: {\n                  height: 200,\n                  width: \"100%\",\n                  zIndex: 2\n                },\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 11\n                }\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._takePhoto = function _callee2() {\n      var status, result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(getPermission(Permissions.CAMERA));\n\n            case 2:\n              status = _context2.sent;\n\n              if (!status) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync(options));\n\n            case 6:\n              result = _context2.sent;\n\n              if (!result.cancelled) {\n                _this.props.navigation.navigate(\"UpdateCoverPhoto\", {\n                  image: result.uri\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(ChooseCoverPhoto, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        onPress: this._selectPhoto,\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        name: \"image\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }), \"Select Photo\"), React.createElement(Text, {\n        onPress: this._takePhoto,\n        style: styles.text,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, React.createElement(Icon, {\n        name: \"camera\",\n        size: 20,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }), \"Take Photo\"));\n    }\n  }]);\n\n  return ChooseCoverPhoto;\n}(Component);\n\nexport { ChooseCoverPhoto as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    padding: 24,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"rgb(95, 32, 155)\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/ChooseCoverPhoto.js"],"names":["Constants","React","Component","Permissions","ImagePicker","getPermission","Icon","options","allowsEditing","ChooseCoverPhoto","state","_selectPhoto","CAMERA_ROLL","status","launchImageLibraryAsync","result","cancelled","props","navigation","navigate","image","uri","height","width","zIndex","_takePhoto","CAMERA","launchCameraAsync","styles","container","text","StyleSheet","create","flex","alignItems","justifyContent","padding","fontSize","fontWeight","textAlign","color"],"mappings":"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","sourcesContent":["import { Constants } from \"expo\";\nimport React, { Component } from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport getPermission from \"../utils/getPermission\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\n\nconst options = {\n  allowsEditing: true\n};\n\nexport default class ChooseCoverPhoto extends Component {\n  state = {};\n\n  _selectPhoto = async () => {\n    const status = await getPermission(Permissions.CAMERA_ROLL);\n    if (status) {\n      const result = await ImagePicker.launchImageLibraryAsync(options);\n      if (!result.cancelled) {\n        this.props.navigation.navigate(\"UpdateCoverPhoto\", {\n          image: result.uri\n        });\n        return (\n          <Image\n            source={{ uri: `${result.uri}` }}\n            style={{ height: 200, width: \"100%\", zIndex: 2 }}\n          />\n        );\n      }\n    }\n  };\n\n  _takePhoto = async () => {\n    const status = await getPermission(Permissions.CAMERA);\n    if (status) {\n      const result = await ImagePicker.launchCameraAsync(options);\n      if (!result.cancelled) {\n        this.props.navigation.navigate(\"UpdateCoverPhoto\", {\n          image: result.uri\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text onPress={this._selectPhoto} style={styles.text}>\n          <Icon name=\"image\" size={20} />\n          Select Photo\n        </Text>\n        <Text onPress={this._takePhoto} style={styles.text}>\n          <Icon name=\"camera\" size={20} />\n          Take Photo\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  text: {\n    padding: 24,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    color: \"rgb(95, 32, 155)\"\n  }\n});\n"]},"metadata":{},"sourceType":"module"}