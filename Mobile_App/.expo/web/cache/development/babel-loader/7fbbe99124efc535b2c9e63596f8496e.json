{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/SingleProfile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Header } from \"react-native-elements\";\nimport { AuthContext } from \"../App\";\nimport jwt_decode from \"jwt-decode\";\nimport { ContainerScroll, Container, ContainerHeader, ContainerItemStory, ContainerPhoto, Photo, Name, PostPhoto, ContainerActions, ContainerActionsIcons, GroupIcons, Label } from \"../Components/Posts/styles\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\n\nvar SingleProfile = function SingleProfile(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var url = state.url;\n  var token = state.token;\n  var decoded = jwt_decode(token);\n  var user_id = decoded;\n\n  var _React$useState = React.useState({\n    color: \"#333\",\n    size: 20,\n    style: {\n      paddingRight: 15\n    }\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      iconsConfigure = _React$useState2[0];\n\n  var initialState = {\n    myprofile: [],\n    myposts: []\n  };\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      myposts = _React$useState4[0],\n      fetchPosts = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      myprofile = _React$useState6[0],\n      fetchProfile = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      controlLoading = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      max = _React$useState10[0],\n      setMax = _React$useState10[1];\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      posts = _React$useState12[0],\n      setState = _React$useState12[1];\n\n  var scrollRef = React.useRef();\n  var data_sent = JSON.stringify({\n    user_id: route.params.user_id,\n    max: max\n  });\n\n  var scroll_to_Top = function scroll_to_Top() {\n    scrollRef.current.scrollTo({\n      y: 0,\n      animated: true\n    });\n  };\n\n  var fetch_user = function fetch_user() {\n    fetch(url + \"/code_reservoir/single_profile.php/?data=\" + data_sent, {\n      method: \"GET\",\n      \"Content-Type\": \"application/json\",\n      headers: {\n        Authorization: \"Bearer \" + state.token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      fetchProfile(data.my_profile);\n      fetchPosts(data.my_posts);\n      controlLoading(false);\n      setMax(data.profile_count);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    setTimeout(fetch_user, 6000);\n  };\n\n  React.useEffect(function () {\n    fetch_user();\n  }, []);\n\n  var like = function like(id) {\n    var newPost, data;\n    return _regeneratorRuntime.async(function like$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            newPost = myposts.map(function (p) {\n              return p.p_id === id ? _objectSpread(_objectSpread({}, p), {}, {\n                post_liker: user_id,\n                total_likes: p.total_likes + 1\n              }) : p;\n            });\n            fetchPosts(newPost);\n            data = new FormData();\n            data.append(\"post_id\", id);\n            data.append(\"token\", state.token);\n            fetch(url + \"/code_reservoir/like_post.php\", {\n              method: \"POST\",\n              body: data\n            }).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              return console.log(data.message);\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var unlike = function unlike(e, id) {\n    var newPost, data;\n    return _regeneratorRuntime.async(function unlike$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            newPost = myposts.map(function (p) {\n              return p.p_id === id ? _objectSpread(_objectSpread({}, p), {}, {\n                post_liker: null,\n                total_likes: p.total_likes - 1\n              }) : p;\n            });\n            fetchPosts(newPost);\n            data = new FormData();\n            data.append(\"post_id\", id);\n            data.append(\"token\", state.token);\n            fetch(url + \"/code_reservoir/unlike_post.php\", {\n              method: \"POST\",\n              body: data\n            }).then(function (res) {\n              return res.json();\n            });\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#fff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, myprofile.map(function (user) {\n    return React.createElement(Header, {\n      placement: \"left\",\n      leftComponent: React.createElement(Text, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"arrow-back\",\n        size: 27,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }\n      })),\n      centerComponent: React.createElement(Text, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        s: true,\n        style: {\n          fontSize: 20,\n          fontWeight: \"bold\",\n          color: \"black\",\n          marginLeft: -5\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, user.full_name),\n      rightComponent: user_id == route.params.user_id ? React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"EditProfile\");\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }, React.createElement(Icon, {\n        name: \"pencil\",\n        size: 25,\n        color: \"rgb(95, 32, 155)\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      })) : null,\n      containerStyle: {\n        backgroundColor: \"#fff\",\n        height: \"13%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    });\n  }), loading ? React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: HEIGHT / 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../Images/loader5.gif\"),\n    style: {\n      height: 100,\n      width: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  })) : React.createElement(ScrollView, {\n    ref: scrollRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, React.createElement(ContainerScroll, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, myprofile.map(function (p) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: url + \"/code_reservoir/\" + p.coverphoto\n      },\n      style: styles.coverPhoto,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: {\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: url + \"/code_reservoir/\" + p.user_img\n      },\n      style: styles.avartar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }), React.createElement(Text, {\n      style: styles.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, p.full_name), React.createElement(Text, {\n      style: styles.bio,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, p.bio), user_id == p.user_id ? React.createElement(TouchableOpacity, {\n      style: styles.editProfile,\n      onPress: function onPress() {\n        return navigation.navigate(\"EditProfile\", {\n          user_id: p.user_id,\n          full_name: p.full_name,\n          bio: p.bio,\n          coverphoto: p.coverphoto,\n          user_img: p.user_img\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.editProfileText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, \"Edit Profile\")) : React.createElement(TouchableOpacity, {\n      style: styles.messageUser,\n      onPress: function onPress() {\n        return navigation.navigate(\"DirectMessage\", {\n          user_id: p.user_id,\n          full_name: p.full_name,\n          user_img: p.user_img\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.messageUserText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, \"Message\"))));\n  }), React.createElement(View, {\n    style: {\n      marginTop: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, myposts.map(function (post, index) {\n    return React.createElement(Container, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, React.createElement(ContainerHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return scroll_to_Top();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, React.createElement(ContainerItemStory, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 23\n      }\n    }, React.createElement(ContainerPhoto, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 25\n      }\n    }, React.createElement(Photo, {\n      source: {\n        uri: url + \"/code_reservoir/\" + post.user_img\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 27\n      }\n    })), React.createElement(Name, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, post.full_name))), React.createElement(FontAwesome5, {\n      name: \"ellipsis-h\",\n      size: 14,\n      color: \"#888\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    })), React.createElement(PostPhoto, {\n      source: {\n        uri: url + \"/code_reservoir/\" + post.post_media\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 19\n      }\n    }), React.createElement(ContainerActions, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }\n    }, React.createElement(ContainerActionsIcons, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 21\n      }\n    }, React.createElement(GroupIcons, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 23\n      }\n    }, post.post_liker === null ? React.createElement(TouchableOpacity, {\n      onPress: function onPress(e) {\n        return like(post.p_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 27\n      }\n    }, React.createElement(Icon, {\n      name: \"heart-outline\",\n      size: 25,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    })) : React.createElement(TouchableOpacity, {\n      onPress: function onPress(e) {\n        return unlike(e, post.p_id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 27\n      }\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      color: \"red\",\n      size: 25,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        marginLeft: 10,\n        marginTop: 2\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"SinglePost\", {\n          post_id: post.p_id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, React.createElement(FontAwesome5, _extends({\n      name: \"comment\"\n    }, iconsConfigure, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 27\n      }\n    })))), React.createElement(FontAwesome5, _extends({\n      name: \"bookmark\"\n    }, iconsConfigure, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 23\n      }\n    }))), React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, post.total_likes, \" Likes\"), React.createElement(Label, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    }, post.post_caption), post.total_comments > 0 ? React.createElement(TouchableOpacity, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      onPress: function onPress() {\n        return navigation.navigate(\"SinglePost\", {\n          post_id: post.p_id\n        });\n      },\n      style: {\n        color: \"grey\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 25\n      }\n    }, post.total_comments, \" comments\")) : null));\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  coverPhoto: {\n    height: HEIGHT / 2,\n    width: \"100%\",\n    borderBottomRightRadius: 15,\n    borderBottomLeftRadius: 15\n  },\n  avartar: {\n    width: 110,\n    height: 110,\n    borderRadius: 110,\n    marginTop: -50,\n    borderWidth: 3,\n    borderColor: \"#fff\"\n  },\n  name: {\n    fontSize: 25,\n    fontWeight: \"bold\"\n  },\n  editProfile: {\n    backgroundColor: \"rgb(95, 32, 155)\",\n    width: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 35,\n    borderRadius: 20,\n    marginTop: 30\n  },\n  editProfileText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  },\n  messageUser: {\n    backgroundColor: \"transparent\",\n    borderWidth: 3,\n    borderColor: \"rgb(95, 32, 155)\",\n    width: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 35,\n    borderRadius: 20,\n    marginTop: 30\n  },\n  messageUserText: {\n    color: \"rgb(95, 32, 155)\",\n    fontWeight: \"bold\"\n  }\n});\nexport default SingleProfile;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/SingleProfile.js"],"names":["React","Header","AuthContext","jwt_decode","ContainerScroll","Container","ContainerHeader","ContainerItemStory","ContainerPhoto","Photo","Name","PostPhoto","ContainerActions","ContainerActionsIcons","GroupIcons","Label","FontAwesome5","Icon","WIDTH","Dimensions","get","width","HEIGHT","height","SingleProfile","route","navigation","useContext","state","dispatch","url","token","decoded","user_id","useState","color","size","style","paddingRight","iconsConfigure","initialState","myprofile","myposts","fetchPosts","fetchProfile","loading","controlLoading","max","setMax","posts","setState","scrollRef","useRef","data_sent","JSON","stringify","params","scroll_to_Top","current","scrollTo","y","animated","fetch_user","fetch","method","headers","Authorization","then","res","json","data","my_profile","my_posts","profile_count","catch","err","console","log","setTimeout","useEffect","like","id","newPost","map","p","p_id","post_liker","total_likes","FormData","append","body","message","unlike","e","flex","backgroundColor","user","goBack","fontSize","fontWeight","marginLeft","full_name","navigate","justifyContent","alignItems","marginTop","require","uri","coverphoto","styles","coverPhoto","user_img","avartar","name","bio","editProfile","editProfileText","messageUser","messageUserText","post","index","post_media","post_id","post_caption","total_comments","StyleSheet","create","borderBottomRightRadius","borderBottomLeftRadius","borderRadius","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  TouchableOpacity,\n  Text,\n  View,\n  StyleSheet,\n  Image,\n  Dimensions,\n  ScrollView\n} from \"react-native\";\nimport { Header } from \"react-native-elements\";\nimport { AuthContext } from \"../App\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  ContainerScroll,\n  Container,\n  ContainerHeader,\n  ContainerItemStory,\n  ContainerPhoto,\n  Photo,\n  Name,\n  PostPhoto,\n  ContainerActions,\n  ContainerActionsIcons,\n  GroupIcons,\n  Label\n} from \"../Components/Posts/styles\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\n\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\n\nconst SingleProfile = ({ route, navigation }) => {\n  const { state, dispatch } = React.useContext(AuthContext);\n  let url = state.url;\n  const token = state.token;\n  const decoded = jwt_decode(token);\n  const user_id = decoded;\n\n  const [iconsConfigure] = React.useState({\n    color: \"#333\",\n    size: 20,\n    style: {\n      paddingRight: 15\n    }\n  });\n\n  const initialState = {\n    myprofile: [],\n    myposts: []\n  };\n\n  //const [profile_data,setState]=React.useState(initialState);\n\n  const [myposts, fetchPosts] = React.useState([]);\n  const [myprofile, fetchProfile] = React.useState([]);\n  const [loading, controlLoading] = React.useState(true);\n  const [max, setMax] = React.useState(\"\");\n\n  const [posts, setState] = React.useState([]);\n  const scrollRef = React.useRef();\n\n  let data_sent = JSON.stringify({\n    user_id: route.params.user_id,\n    max: max\n  });\n\n  const scroll_to_Top = () => {\n    scrollRef.current.scrollTo({\n      y: 0,\n      animated: true\n    });\n  };\n\n  const fetch_user = () => {\n    fetch(`${url}/code_reservoir/single_profile.php/?data=${data_sent}`, {\n      method: \"GET\",\n      \"Content-Type\": \"application/json\",\n      headers: {\n        Authorization: `Bearer ${state.token}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        fetchProfile(data.my_profile);\n        fetchPosts(data.my_posts);\n        controlLoading(false);\n        setMax(data.profile_count);\n      })\n      .catch(err => console.log(err));\n    setTimeout(fetch_user, 6000);\n  };\n\n  React.useEffect(() => {\n    fetch_user();\n  }, []);\n\n  const like = async id => {\n    const newPost = myposts.map(p =>\n      p.p_id === id\n        ? { ...p, post_liker: user_id, total_likes: p.total_likes + 1 }\n        : p\n    );\n\n    //  dispatch({ type: \"FETCH_USER_POSTS\", payload: newPost });\n    fetchPosts(newPost);\n\n    const data = new FormData();\n    data.append(\"post_id\", id);\n    data.append(\"token\", state.token);\n\n    fetch(`${url}/code_reservoir/like_post.php`, {\n      method: \"POST\",\n      body: data\n      //headers: {\n      //  'Content-Type': 'multipart/form-data'\n      //}\n    })\n      .then(res => res.json())\n      .then(data => console.log(data.message));\n    //.catch(err=>alert(err))\n  };\n\n  const unlike = async (e, id) => {\n    const newPost = myposts.map(p =>\n      p.p_id === id\n        ? { ...p, post_liker: null, total_likes: p.total_likes - 1 }\n        : p\n    );\n\n    fetchPosts(newPost);\n    const data = new FormData();\n    data.append(\"post_id\", id);\n    data.append(\"token\", state.token);\n\n    fetch(`${url}/code_reservoir/unlike_post.php`, {\n      method: \"POST\",\n      body: data\n      //headers: {\n      //  'Content-Type': 'multipart/form-data'\n      //}\n    }).then(res => res.json());\n    // .then(data=>alert(data.message))\n    // .catch(err=>console.log(err))\n  };\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"#fff\" }}>\n      {myprofile.map(user => (\n        <Header\n          placement=\"left\"\n          leftComponent={\n            <Text onPress={() => navigation.goBack()}>\n              <Icon name=\"arrow-back\" size={27} />\n            </Text>\n          }\n          centerComponent={\n            <Text\n              onPress={() => navigation.goBack()}\n              s\n              style={{\n                fontSize: 20,\n                fontWeight: \"bold\",\n                color: \"black\",\n                marginLeft: -5\n              }}\n            >\n              {user.full_name}\n            </Text>\n          }\n          rightComponent={\n            user_id == route.params.user_id ? (\n              <TouchableOpacity\n                onPress={() => navigation.navigate(\"EditProfile\")}\n              >\n                <Icon name=\"pencil\" size={25} color=\"rgb(95, 32, 155)\" />\n              </TouchableOpacity>\n            ) : null\n          }\n          containerStyle={{\n            backgroundColor: \"#fff\",\n            //justifyContent: 'space-around',\n            height: \"13%\"\n          }}\n        />\n      ))}\n      {loading ? (\n        <View\n          style={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: HEIGHT / 3\n          }}\n        >\n          <Image\n            source={require(\"../Images/loader5.gif\")}\n            style={{ height: 100, width: 100 }}\n          />\n        </View>\n      ) : (\n        <ScrollView ref={scrollRef}>\n          <ContainerScroll>\n            {myprofile.map(p => (\n              <View>\n                <Image\n                  source={{ uri: `${url}/code_reservoir/${p.coverphoto}` }}\n                  style={styles.coverPhoto}\n                />\n                <View style={{ alignItems: \"center\" }}>\n                  <Image\n                    source={{ uri: `${url}/code_reservoir/${p.user_img}` }}\n                    style={styles.avartar}\n                  />\n                  <Text style={styles.name}>{p.full_name}</Text>\n                  <Text style={styles.bio}>{p.bio}</Text>\n                  {user_id == p.user_id ? (\n                    <TouchableOpacity\n                      style={styles.editProfile}\n                      onPress={() =>\n                        navigation.navigate(\"EditProfile\", {\n                          user_id: p.user_id,\n                          full_name: p.full_name,\n                          bio: p.bio,\n                          coverphoto: p.coverphoto,\n                          user_img: p.user_img\n                        })\n                      }\n                    >\n                      <Text style={styles.editProfileText}>Edit Profile</Text>\n                    </TouchableOpacity>\n                  ) : (\n                    <TouchableOpacity\n                      style={styles.messageUser}\n                      onPress={() =>\n                        navigation.navigate(\"DirectMessage\", {\n                          user_id: p.user_id,\n                          full_name: p.full_name,\n                          user_img: p.user_img\n                        })\n                      }\n                    >\n                      <Text style={styles.messageUserText}>Message</Text>\n                    </TouchableOpacity>\n                  )}\n                </View>\n              </View>\n            ))}\n\n            <View style={{ marginTop: 100 }}>\n              {myposts.map((post, index) => (\n                <Container key={index}>\n                  <ContainerHeader>\n                    <TouchableOpacity onPress={() => scroll_to_Top()}>\n                      <ContainerItemStory>\n                        <ContainerPhoto>\n                          <Photo\n                            source={{\n                              uri: `${url}/code_reservoir/${post.user_img}`\n                            }}\n                          />\n                        </ContainerPhoto>\n                        <Name>{post.full_name}</Name>\n                      </ContainerItemStory>\n                    </TouchableOpacity>\n                    <FontAwesome5 name=\"ellipsis-h\" size={14} color=\"#888\" />\n                  </ContainerHeader>\n                  <PostPhoto\n                    source={{ uri: `${url}/code_reservoir/${post.post_media}` }}\n                  />\n                  <ContainerActions>\n                    <ContainerActionsIcons>\n                      <GroupIcons>\n                        {post.post_liker === null ? (\n                          <TouchableOpacity onPress={e => like(post.p_id)}>\n                            <Icon\n                              name=\"heart-outline\"\n                              size={25}\n                              color=\"black\"\n                            />\n                          </TouchableOpacity>\n                        ) : (\n                          <TouchableOpacity onPress={e => unlike(e, post.p_id)}>\n                            <Icon name=\"heart\" color=\"red\" size={25} />\n                          </TouchableOpacity>\n                        )}\n                        <TouchableOpacity\n                          style={{ marginLeft: 10, marginTop: 2 }}\n                          onPress={() =>\n                            navigation.navigate(\"SinglePost\", {\n                              post_id: post.p_id\n                            })\n                          }\n                        >\n                          <FontAwesome5 name=\"comment\" {...iconsConfigure} />\n                        </TouchableOpacity>\n                      </GroupIcons>\n                      <FontAwesome5 name=\"bookmark\" {...iconsConfigure} />\n                    </ContainerActionsIcons>\n                    <Label>{post.total_likes} Likes</Label>\n                    <Label>{post.post_caption}</Label>\n                    {post.total_comments > 0 ? (\n                      <TouchableOpacity>\n                        <Text\n                          onPress={() =>\n                            navigation.navigate(\"SinglePost\", {\n                              post_id: post.p_id\n                            })\n                          }\n                          style={{ color: \"grey\" }}\n                        >\n                          {post.total_comments} comments\n                        </Text>\n                      </TouchableOpacity>\n                    ) : null}\n                  </ContainerActions>\n                </Container>\n              ))}\n            </View>\n          </ContainerScroll>\n        </ScrollView>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  coverPhoto: {\n    height: HEIGHT / 2,\n    width: \"100%\",\n    borderBottomRightRadius: 15,\n    borderBottomLeftRadius: 15\n  },\n  avartar: {\n    width: 110,\n    height: 110,\n    borderRadius: 110,\n    marginTop: -50,\n    borderWidth: 3,\n    borderColor: \"#fff\"\n  },\n  name: {\n    fontSize: 25,\n    fontWeight: \"bold\"\n  },\n  editProfile: {\n    backgroundColor: \"rgb(95, 32, 155)\",\n    width: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 35,\n    borderRadius: 20,\n    marginTop: 30\n  },\n  editProfileText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  },\n  messageUser: {\n    backgroundColor: \"transparent\",\n    borderWidth: 3,\n    borderColor: \"rgb(95, 32, 155)\",\n    width: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 35,\n    borderRadius: 20,\n    marginTop: 30\n  },\n  messageUserText: {\n    color: \"rgb(95, 32, 155)\",\n    fontWeight: \"bold\"\n  }\n});\n\nexport default SingleProfile;\n"]},"metadata":{},"sourceType":"module"}