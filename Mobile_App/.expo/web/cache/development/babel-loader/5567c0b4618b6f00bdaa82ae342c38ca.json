{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/DirectMessage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { AuthContext } from \"../App\";\nimport jwt_decode from \"jwt-decode\";\nimport { Header } from \"react-native-elements\";\nimport uuid from \"uuid\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nexport var MessageContext = React.createContext();\n\nvar DirectMessage = function DirectMessage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var url = state.url;\n  var scroll = React.useRef();\n  var myinput = React.useRef();\n  var initialState = {\n    messages: []\n  };\n\n  var ReducerFunction = function ReducerFunction(prevState, action) {\n    switch (action.type) {\n      case \"ADD_MESSAGE\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          messages: [].concat(_toConsumableArray(prevState.messages), [action.payload])\n        });\n\n      case \"FETCH_MESSAGES\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          messages: action.payload\n        });\n\n      default:\n        return prevState;\n    }\n  };\n\n  var _React$useReducer = React.useReducer(ReducerFunction, initialState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      messagesState = _React$useReducer2[0],\n      setMessages = _React$useReducer2[1];\n\n  var token = state.token;\n  var decoded = jwt_decode(token);\n  var user_id = decoded;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      message = _React$useState2[0],\n      setMessage = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      messages = _React$useState4[0],\n      updateMessages = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      sent = _React$useState6[0],\n      updateSent = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      max = _React$useState8[0],\n      setMax = _React$useState8[1];\n\n  var data_sent = JSON.stringify({\n    user_id: route.params.user_id,\n    max: max\n  });\n\n  var sendMessage = function sendMessage() {\n    var sender_id, receipient_id, offline_data, formdata;\n    return _regeneratorRuntime.async(function sendMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sender_id = user_id;\n            receipient_id = route.params.user_id;\n            offline_data = {\n              sender_id: sender_id,\n              receipient_id: route.params.user_id,\n              message: message\n            };\n\n            if (!(message == \"\")) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 7:\n            myinput.current.clear();\n            setMessages({\n              type: \"ADD_MESSAGE\",\n              payload: offline_data\n            });\n            formdata = new FormData();\n            formdata.append(\"message\", message);\n            formdata.append(\"receipient_id\", receipient_id);\n            fetch(url + \"/code_reservoir/send_message.php\", {\n              method: \"POST\",\n              headers: {\n                Authorization: \"Bearer \" + state.token\n              },\n              body: formdata\n            }).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              updateSent(true);\n            }).catch(function (err) {\n              return alert(\"No Internet\");\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var fetch_messages = function fetch_messages() {\n    fetch(url + \"/code_reservoir/fetch_messages.php/?data=\" + data_sent, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + state.token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      updateSent(true);\n      updateMessages(data.messages);\n      setMax(data.message_count);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    setTimeout(fetch_messages, 20);\n  };\n\n  React.useEffect(function () {\n    fetch_messages();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, React.createElement(Header, {\n    placement: \"left\",\n    leftComponent: React.createElement(Text, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      style: {\n        marginTop: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, React.createElement(Icon, {\n      name: \"arrow-back\",\n      size: 27,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    })),\n    centerComponent: React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: url + \"/code_reservoir/\" + route.params.user_img\n      },\n      style: styles.userAvatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }), React.createElement(Text, {\n      style: {\n        marginLeft: 5,\n        marginTop: 10,\n        fontWeight: \"bold\",\n        fontSize: 18\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, route.params.full_name)),\n    containerStyle: {\n      backgroundColor: \"#fff\",\n      height: 100,\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      display: \"flex\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    ref: scroll,\n    onContentSizeChange: function onContentSizeChange() {\n      return scroll.current.scrollToEnd({\n        animated: true\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: 100,\n      marginBottom: 70\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, messages.map(function (m) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, m.sender_id == user_id ? React.createElement(View, {\n      style: styles.chatBubble1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#fff\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }\n    }, m.message)) : React.createElement(View, {\n      style: styles.chatBubble2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#333\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, m.message)));\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inputWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Type Message\",\n    multiline: true,\n    style: styles.inputField,\n    keyboardAppearance: \"dark\",\n    keyboardType: \"default\",\n    onChangeText: function onChangeText(message) {\n      return setMessage(message);\n    },\n    value: state.password,\n    ref: myinput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), React.createElement(Icon, {\n    name: \"image\",\n    size: 25,\n    color: \"rgb(95, 32, 155)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }), React.createElement(Icon, {\n    name: \"camera\",\n    size: 25,\n    style: {\n      marginLeft: 10\n    },\n    color: \"rgb(95, 32, 155)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  })), React.createElement(Icon, {\n    name: \"send\",\n    size: 30,\n    style: {\n      marginLeft: 10\n    },\n    color: \"rgb(95, 32, 155)\",\n    onPress: function onPress() {\n      return sendMessage();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DirectMessage;\nvar styles = StyleSheet.create({\n  inputWrapper: {\n    flexDirection: \"row\",\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft: 10,\n    borderColor: \"#fff\",\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    marginTop: -10,\n    borderRadius: 30,\n    width: \"83%\"\n  },\n  inputField: {\n    width: \"78%\",\n    borderColor: \"#fff\",\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    paddingLeft: 10\n  },\n  chatBubble1: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 8,\n    paddingBottom: 8,\n    borderRadius: 20,\n    marginTop: 5,\n    marginBottom: 5,\n    marginRight: \"4%\",\n    maxWidth: \"80%\",\n    alignSelf: \"flex-end\",\n    backgroundColor: \"rgb(95, 32, 155)\",\n    color: \"#fff\"\n  },\n  chatBubble2: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 8,\n    paddingBottom: 8,\n    borderRadius: 20,\n    marginTop: 5,\n    marginBottom: 5,\n    maxWidth: \"80%\",\n    marginLeft: \"4%\",\n    alignSelf: \"flex-start\",\n    backgroundColor: \"#fff\",\n    color: \"#fff\"\n  },\n  userAvatar: {\n    height: 50,\n    width: 50,\n    borderRadius: 50\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/DirectMessage.js"],"names":["React","Icon","NavigationContainer","AuthContext","jwt_decode","Header","uuid","WIDTH","Dimensions","get","width","HEIGHT","height","MessageContext","createContext","DirectMessage","route","navigation","useContext","state","dispatch","url","scroll","useRef","myinput","initialState","messages","ReducerFunction","prevState","action","type","payload","useReducer","messagesState","setMessages","token","decoded","user_id","useState","message","setMessage","updateMessages","sent","updateSent","max","setMax","data_sent","JSON","stringify","params","sendMessage","sender_id","receipient_id","offline_data","current","clear","formdata","FormData","append","fetch","method","headers","Authorization","body","then","res","json","data","catch","err","alert","fetch_messages","message_count","console","log","setTimeout","useEffect","flex","goBack","marginTop","flexDirection","uri","user_img","styles","userAvatar","marginLeft","fontWeight","fontSize","full_name","backgroundColor","justifyContent","display","scrollToEnd","animated","marginBottom","map","m","chatBubble1","color","chatBubble2","inputWrapper","inputField","password","StyleSheet","create","paddingTop","paddingBottom","paddingLeft","borderColor","borderWidth","borderRadius","paddingRight","marginRight","maxWidth","alignSelf"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  Text,\n  View,\n  TextInput,\n  KeyboardAvoidingView,\n  StyleSheet,\n  Dimensions,\n  Platform,\n  ScrollView,\n  TouchableOpacity,\n  Image\n} from \"react-native\";\nimport Icon from \"react-native-vector-icons/Ionicons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { AuthContext } from \"../App\";\n//import { MessageContext } from \"../Context/MessageContext\";\nimport jwt_decode from \"jwt-decode\";\nimport { Header } from \"react-native-elements\";\nimport uuid from \"uuid\";\n\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\n\nexport const MessageContext = React.createContext();\n\nconst DirectMessage = ({ route, navigation }) => {\n  const { state, dispatch } = React.useContext(AuthContext);\n  let url = state.url;\n  //const { messagesState, setMessages } = React.useContext(MessageContext);\n  const scroll = React.useRef();\n  const myinput = React.useRef();\n\n  const initialState = {\n    messages: []\n  };\n\n  const ReducerFunction = (prevState, action) => {\n    switch (action.type) {\n      case \"ADD_MESSAGE\":\n        return {\n          ...prevState,\n          messages: [...prevState.messages, action.payload]\n        };\n      case \"FETCH_MESSAGES\":\n        return {\n          ...prevState,\n          messages: action.payload\n        };\n      default:\n        return prevState;\n    }\n  };\n\n  const [messagesState, setMessages] = React.useReducer(\n    ReducerFunction,\n    initialState\n  );\n\n  const token = state.token;\n  const decoded = jwt_decode(token);\n  const user_id = decoded;\n\n  const [message, setMessage] = React.useState(\"\");\n  const [messages, updateMessages] = React.useState([]);\n  const [sent, updateSent] = React.useState(false);\n  const [max, setMax] = React.useState(\"\");\n\n  let data_sent = JSON.stringify({\n    user_id: route.params.user_id,\n    max: max\n  });\n\n  const sendMessage = async () => {\n    const sender_id = user_id;\n    const receipient_id = route.params.user_id;\n\n    const offline_data = {\n      sender_id: sender_id,\n      receipient_id: route.params.user_id,\n      message: message\n    };\n\n    if (message == \"\") {\n      return;\n    } else {\n      myinput.current.clear();\n      setMessages({ type: \"ADD_MESSAGE\", payload: offline_data });\n      const formdata = new FormData();\n      formdata.append(\"message\", message);\n      formdata.append(\"receipient_id\", receipient_id);\n      fetch(`${url}/code_reservoir/send_message.php`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${state.token}`\n        },\n        body: formdata\n      })\n        .then(res => res.json())\n        .then(data => {\n          updateSent(true);\n        })\n        .catch(err => alert(\"No Internet\"));\n    }\n  };\n\n  const fetch_messages = () => {\n    fetch(`${url}/code_reservoir/fetch_messages.php/?data=${data_sent}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${state.token}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        updateSent(true);\n        updateMessages(data.messages);\n        setMax(data.message_count);\n      })\n      .catch(err => console.log(err));\n    setTimeout(fetch_messages, 20);\n  };\n\n  React.useEffect(() => {\n    fetch_messages();\n  }, []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <Header\n        placement=\"left\"\n        leftComponent={\n          <Text onPress={() => navigation.goBack()} style={{ marginTop: 10 }}>\n            <Icon name=\"arrow-back\" size={27} />\n          </Text>\n        }\n        centerComponent={\n          <View style={{ flexDirection: \"row\" }}>\n            <Image\n              source={{\n                uri: `${url}/code_reservoir/${route.params.user_img}`\n              }}\n              style={styles.userAvatar}\n            />\n            <Text\n              style={{\n                marginLeft: 5,\n                marginTop: 10,\n                fontWeight: \"bold\",\n                fontSize: 18\n              }}\n            >\n              {route.params.full_name}\n            </Text>\n          </View>\n        }\n        containerStyle={{\n          backgroundColor: \"#fff\",\n          height: 100,\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          display: \"flex\"\n        }}\n      />\n\n      <KeyboardAvoidingView style={{ flex: 1 }}>\n        <ScrollView\n          ref={scroll}\n          onContentSizeChange={() =>\n            scroll.current.scrollToEnd({ animated: true })\n          }\n        >\n          <View style={{ marginTop: 100, marginBottom: 70 }}>\n            {messages.map(m => (\n              <View>\n                {m.sender_id == user_id ? (\n                  <View style={styles.chatBubble1}>\n                    <Text style={{ color: \"#fff\" }}>{m.message}</Text>\n                  </View>\n                ) : (\n                  <View style={styles.chatBubble2}>\n                    <Text style={{ color: \"#333\" }}>{m.message}</Text>\n                  </View>\n                )}\n              </View>\n            ))}\n          </View>\n        </ScrollView>\n\n        <View style={{ flexDirection: \"row\", justifyContent: \"center\" }}>\n          <View style={styles.inputWrapper}>\n            <TextInput\n              placeholder=\"Type Message\"\n              multiline\n              style={styles.inputField}\n              keyboardAppearance=\"dark\"\n              keyboardType=\"default\"\n              onChangeText={message => setMessage(message)}\n              value={state.password}\n              ref={myinput}\n            />\n            <Icon name=\"image\" size={25} color=\"rgb(95, 32, 155)\" />\n            <Icon\n              name=\"camera\"\n              size={25}\n              style={{ marginLeft: 10 }}\n              color=\"rgb(95, 32, 155)\"\n            />\n          </View>\n          <Icon\n            name=\"send\"\n            size={30}\n            style={{ marginLeft: 10 }}\n            color=\"rgb(95, 32, 155)\"\n            onPress={() => sendMessage()}\n          />\n        </View>\n\n        <View style={{ marginTop: 10 }}></View>\n      </KeyboardAvoidingView>\n    </View>\n  );\n};\n\nexport default DirectMessage;\n\nconst styles = StyleSheet.create({\n  inputWrapper: {\n    flexDirection: \"row\",\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft: 10,\n    borderColor: \"#fff\",\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    marginTop: -10,\n    borderRadius: 30,\n    width: \"83%\"\n  },\n\n  inputField: {\n    width: \"78%\",\n    borderColor: \"#fff\",\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    paddingLeft: 10\n  },\n  chatBubble1: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 8,\n    paddingBottom: 8,\n    borderRadius: 20,\n    marginTop: 5,\n    marginBottom: 5,\n    marginRight: \"4%\",\n    maxWidth: \"80%\",\n    alignSelf: \"flex-end\",\n\n    backgroundColor: \"rgb(95, 32, 155)\",\n    color: \"#fff\"\n  },\n\n  chatBubble2: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 8,\n    paddingBottom: 8,\n    borderRadius: 20,\n    marginTop: 5,\n    marginBottom: 5,\n    maxWidth: \"80%\",\n    marginLeft: \"4%\",\n    alignSelf: \"flex-start\",\n    backgroundColor: \"#fff\",\n    color: \"#fff\"\n  },\n\n  userAvatar: {\n    height: 50,\n    width: 50,\n    borderRadius: 50\n  }\n});\n"]},"metadata":{},"sourceType":"module"}