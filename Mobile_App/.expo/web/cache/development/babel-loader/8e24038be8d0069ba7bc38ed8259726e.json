{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport EventSource from \"./EventSource\";\n\nvar RNEventSource = function () {\n  function RNEventSource(url) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, RNEventSource);\n\n    this.url = url;\n    this.options = options;\n    this.eventSource = new EventSource(url, options);\n    this.listeners = [];\n  }\n\n  _createClass(RNEventSource, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      var _this = this;\n\n      this.eventSource.addEventListener(type, listener);\n\n      var remove = function remove() {\n        _this.removeListener(type, listener);\n      };\n\n      this.listeners.push({\n        remove: remove,\n        type: type,\n        listener: listener\n      });\n      return this.listeners[this.listeners.length - 1];\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      this.listeners.map(function (listener) {\n        listener.remove();\n      });\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(type, listener) {\n      this.eventSource.removeEventListener(type, listener);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.eventSource.close();\n    }\n  }]);\n\n  return RNEventSource;\n}();\n\nexport default RNEventSource;","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-event-source/index.js"],"names":["EventSource","RNEventSource","url","options","eventSource","listeners","type","listener","addEventListener","remove","removeListener","push","length","map","removeEventListener","close"],"mappings":";;AAAA,OAAOA,WAAP;;IAEMC,a;AACJ,yBAAYC,GAAZ,EAA6B;AAAA,QAAZC,OAAY,uEAAJ,EAAI;;AAAA;;AAC3B,SAAKD,GAAL,GAAmBA,GAAnB;AACA,SAAKC,OAAL,GAAmBA,OAAnB;AACA,SAAKC,WAAL,GAAmB,IAAIJ,WAAJ,CAAgBE,GAAhB,EAAqBC,OAArB,CAAnB;AACA,SAAKE,SAAL,GAAmB,EAAnB;AACD;;;;qCACiBC,I,EAAMC,Q,EAAU;AAAA;;AAChC,WAAKH,WAAL,CAAiBI,gBAAjB,CAAkCF,IAAlC,EAAwCC,QAAxC;;AAEA,UAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,QAAA,KAAI,CAACC,cAAL,CAAoBJ,IAApB,EAA0BC,QAA1B;AACD,OAFD;;AAIA,WAAKF,SAAL,CAAeM,IAAf,CAAoB;AAClBF,QAAAA,MAAM,EAAEA,MADU;AACFH,QAAAA,IAAI,EAAEA,IADJ;AACUC,QAAAA,QAAQ,EAAEA;AADpB,OAApB;AAIA,aAAO,KAAKF,SAAL,CAAe,KAAKA,SAAL,CAAeO,MAAf,GAAwB,CAAvC,CAAP;AACD;;;yCACqB;AACpB,WAAKP,SAAL,CAAeQ,GAAf,CAAmB,UAACN,QAAD,EAAc;AAC/BA,QAAAA,QAAQ,CAACE,MAAT;AACD,OAFD;AAGD;;;mCACcH,I,EAAMC,Q,EAAU;AAC7B,WAAKH,WAAL,CAAiBU,mBAAjB,CAAqCR,IAArC,EAA2CC,QAA3C;AACD;;;4BACQ;AACP,WAAKH,WAAL,CAAiBW,KAAjB;AACD;;;;;;AAGH,eAAed,aAAf","sourcesContent":["import EventSource from './EventSource'\n\nclass RNEventSource {\n  constructor(url, options={}) {\n    this.url         = url;\n    this.options     = options;\n    this.eventSource = new EventSource(url, options);\n    this.listeners   = [];\n  }\n  addEventListener (type, listener) {\n    this.eventSource.addEventListener(type, listener)\n\n    const remove = () => {\n      this.removeListener(type, listener);\n    }\n\n    this.listeners.push({\n      remove: remove, type: type, listener: listener\n    });\n\n    return this.listeners[this.listeners.length - 1];\n  }\n  removeAllListeners () {\n    this.listeners.map((listener) => {\n      listener.remove();\n    });\n  }\n  removeListener(type, listener) {\n    this.eventSource.removeEventListener(type, listener);\n  }\n  close () {\n    this.eventSource.close();\n  }\n}\n\nexport default RNEventSource;\n"]},"metadata":{},"sourceType":"module"}