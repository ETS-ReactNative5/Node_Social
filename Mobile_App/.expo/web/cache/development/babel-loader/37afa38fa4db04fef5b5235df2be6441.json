{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/SinglePost.js\";\n\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport HeaderButtons from \"react-navigation-header-buttons\";\nimport { Header } from \"react-native-elements\";\nimport { AuthContext } from \"../App\";\nvar WIDTH = Dimensions.get(\"window\").width;\nvar HEIGHT = Dimensions.get(\"window\").height;\nimport jwt_decode from \"jwt-decode\";\n\nvar SinglePost = function SinglePost(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useContext = React.useContext(AuthContext),\n      state = _React$useContext.state,\n      dispatch = _React$useContext.dispatch;\n\n  var url = state.url;\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      comment_text = _React$useState2[0],\n      setComment = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      comments = _React$useState4[0],\n      setComments = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      max = _React$useState6[0],\n      setMax = _React$useState6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      controlLoading = _React$useState8[1];\n\n  var scroll = React.useRef();\n  var myinput = React.useRef();\n  var token = state.token;\n  var decoded = jwt_decode(token);\n  var user_id = decoded;\n  var data_sent = JSON.stringify({\n    post_id: route.params.post_id,\n    max: max\n  });\n\n  var addCommment = function addCommment() {\n    var sender_id = user_id;\n    var receipient_id = route.params.user_id;\n    var offline_data = {\n      commentor: user_id,\n      text: comment_text\n    };\n\n    if (comment_text == \"\") {\n      return;\n    } else {\n      myinput.current.clear();\n      setComments([].concat(_toConsumableArray(comments), [offline_data]));\n      var formdata = new FormData();\n      formdata.append(\"comment\", comment_text);\n      formdata.append(\"post_id\", route.params.post_id);\n      fetch(url + \"/code_reservoir/create_comment.php\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + state.token\n        },\n        body: formdata\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        console.log(data.comments);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      setTimeout(fetch_comments, 20);\n    }\n  };\n\n  var fetch_comments = function fetch_comments() {\n    fetch(url + \"/code_reservoir/fetch_comments.php/?data=\" + data_sent, {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \" + state.token\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setComments(data.comments);\n      controlLoading(false);\n      setMax(data.comment_count);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n    setTimeout(fetch_comments, 20);\n  };\n\n  React.useEffect(function () {\n    fetch_comments();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"\" + (loading ? \"#fff\" : \"whitesmoke\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, loading ? React.createElement(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      marginTop: HEIGHT / 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: require(\"../Images/loader5.gif\"),\n    style: {\n      height: 100,\n      width: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })) : React.createElement(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    ref: scroll,\n    onContentSizeChange: function onContentSizeChange() {\n      return scroll.current.scrollToEnd({\n        animated: true\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      marginTop: \"30%\",\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, comments.map(function (c) {\n    return React.createElement(View, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"SingleProfile\", {\n          user_id: c.user_id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: url + \"/code_reservoir/\" + c.user_img\n      },\n      style: styles.userAvatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    })), c.user_id === user_id ? React.createElement(View, {\n      style: styles.chatBubble1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"#fff\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 23\n      }\n    }, c.text)) : React.createElement(View, {\n      style: styles.chatBubble2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: \"black\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }, c.text)));\n  }))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.inputWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    placeholder: \"Write Comment\",\n    multiline: true,\n    style: styles.inputField,\n    keyboardAppearance: \"dark\",\n    keyboardType: \"default\",\n    onChangeText: function onChangeText(comment) {\n      return setComment(comment);\n    },\n    value: state.password,\n    ref: myinput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }), React.createElement(Icon, {\n    name: \"image\",\n    size: 25,\n    color: \"rgb(95, 32, 155)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }), React.createElement(Icon, {\n    name: \"camera\",\n    size: 25,\n    style: {\n      marginLeft: 10\n    },\n    color: \"rgb(95, 32, 155)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  })), React.createElement(Icon, {\n    name: \"send\",\n    size: 30,\n    style: {\n      marginLeft: 10\n    },\n    color: \"rgb(95, 32, 155)\",\n    onPress: function onPress() {\n      return addCommment();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default SinglePost;\nvar styles = StyleSheet.create({\n  inputWrapper: {\n    flexDirection: \"row\",\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft: 10,\n    borderColor: \"#fff\",\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    marginTop: -10,\n    borderRadius: 30,\n    width: \"83%\"\n  },\n  inputField: {\n    width: \"78%\",\n    borderColor: \"#fff\",\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    paddingLeft: 10\n  },\n  chatBubble1: {\n    padding: 20,\n    borderRadius: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    marginLeft: \"4%\",\n    maxWidth: \"80%\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    backgroundColor: \"rgb(95, 32, 155)\",\n    color: \"#fff\"\n  },\n  chatBubble2: {\n    padding: 20,\n    borderRadius: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    maxWidth: \"80%\",\n    marginLeft: \"4%\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    backgroundColor: \"#fff\",\n    color: \"#fff\"\n  },\n  userAvatar: {\n    height: 40,\n    width: 40,\n    borderRadius: 50,\n    marginLeft: 10\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/Screens/SinglePost.js"],"names":["Icon","React","HeaderButtons","Header","AuthContext","WIDTH","Dimensions","get","width","HEIGHT","height","jwt_decode","SinglePost","navigation","route","useContext","state","dispatch","url","useState","comment_text","setComment","comments","setComments","max","setMax","loading","controlLoading","scroll","useRef","myinput","token","decoded","user_id","data_sent","JSON","stringify","post_id","params","addCommment","sender_id","receipient_id","offline_data","commentor","text","current","clear","formdata","FormData","append","fetch","method","headers","Authorization","body","then","res","json","data","console","log","catch","err","setTimeout","fetch_comments","comment_count","useEffect","flex","backgroundColor","justifyContent","alignItems","marginTop","require","scrollToEnd","animated","marginBottom","map","c","display","flexDirection","navigate","uri","user_img","styles","userAvatar","chatBubble1","color","chatBubble2","inputWrapper","inputField","comment","password","marginLeft","StyleSheet","create","paddingTop","paddingBottom","paddingLeft","borderColor","borderWidth","borderRadius","padding","maxWidth","alignSelf"],"mappings":"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","sourcesContent":["import Icon from \"react-native-vector-icons/Ionicons\";\nimport React from \"react\";\nimport {\n  Image,\n  TextInput,\n  Text,\n  View,\n  StyleSheet,\n  ScrollView,\n  Dimensions,\n  TouchableOpacity,\n  KeyboardAvoidingView\n} from \"react-native\";\nimport HeaderButtons from \"react-navigation-header-buttons\";\nimport { Header } from \"react-native-elements\";\nimport { AuthContext } from \"../App\";\n\nconst WIDTH = Dimensions.get(\"window\").width;\nconst HEIGHT = Dimensions.get(\"window\").height;\n\nimport jwt_decode from \"jwt-decode\";\n\nconst SinglePost = ({ navigation, route }) => {\n  const { state, dispatch } = React.useContext(AuthContext);\n  let url = state.url;\n  const [comment_text, setComment] = React.useState(\"\");\n  const [comments, setComments] = React.useState([]);\n  const [max, setMax] = React.useState(\"\");\n  const [loading, controlLoading] = React.useState(true);\n  const scroll = React.useRef();\n  const myinput = React.useRef();\n\n  const token = state.token;\n  const decoded = jwt_decode(token);\n  const user_id = decoded;\n\n  let data_sent = JSON.stringify({\n    post_id: route.params.post_id,\n    max: max\n  });\n\n  const addCommment = () => {\n    const sender_id = user_id;\n    const receipient_id = route.params.user_id;\n\n    const offline_data = {\n      commentor: user_id,\n      text: comment_text\n    };\n\n    if (comment_text == \"\") {\n      return;\n    } else {\n      myinput.current.clear();\n      setComments([...comments, offline_data]);\n\n      //Sending comment to the server\n      const formdata = new FormData();\n      formdata.append(\"comment\", comment_text);\n      formdata.append(\"post_id\", route.params.post_id);\n      fetch(`${url}/code_reservoir/create_comment.php`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${state.token}`\n        },\n        body: formdata\n      })\n        .then(res => res.json())\n        .then(data => {\n          console.log(data.comments);\n        })\n        .catch(err => console.log(err));\n      setTimeout(fetch_comments, 20);\n    }\n  };\n\n  const fetch_comments = () => {\n    fetch(`${url}/code_reservoir/fetch_comments.php/?data=${data_sent}`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${state.token}`\n      }\n    })\n      .then(res => res.json())\n      .then(data => {\n        setComments(data.comments);\n        controlLoading(false);\n        setMax(data.comment_count);\n      })\n      .catch(err => console.log(err));\n    setTimeout(fetch_comments, 20);\n  };\n\n  React.useEffect(() => {\n    fetch_comments();\n  }, []);\n\n  return (\n    <View\n      style={{ flex: 1, backgroundColor: `${loading ? \"#fff\" : \"whitesmoke\"}` }}\n    >\n      {loading ? (\n        <View\n          style={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            marginTop: HEIGHT / 3\n          }}\n        >\n          <Image\n            source={require(\"../Images/loader5.gif\")}\n            style={{ height: 100, width: 100 }}\n          />\n        </View>\n      ) : (\n        <KeyboardAvoidingView style={{ flex: 1 }}>\n          <ScrollView\n            ref={scroll}\n            onContentSizeChange={() =>\n              scroll.current.scrollToEnd({ animated: true })\n            }\n          >\n            <View style={{ marginTop: \"30%\", marginBottom: 30 }}>\n              {comments.map(c => (\n                <View style={{ display: \"flex\", flexDirection: \"row\" }}>\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"SingleProfile\", {\n                        user_id: c.user_id\n                      })\n                    }\n                  >\n                    <Image\n                      source={{\n                        uri: `${url}/code_reservoir/${c.user_img}`\n                      }}\n                      style={styles.userAvatar}\n                    />\n                  </TouchableOpacity>\n                  {c.user_id === user_id ? (\n                    <View style={styles.chatBubble1}>\n                      <Text style={{ color: \"#fff\" }}>{c.text}</Text>\n                    </View>\n                  ) : (\n                    <View style={styles.chatBubble2}>\n                      <Text style={{ color: \"black\" }}>{c.text}</Text>\n                    </View>\n                  )}\n                </View>\n              ))}\n            </View>\n          </ScrollView>\n\n          <View style={{ flexDirection: \"row\", justifyContent: \"center\" }}>\n            <View style={styles.inputWrapper}>\n              <TextInput\n                placeholder=\"Write Comment\"\n                multiline\n                style={styles.inputField}\n                keyboardAppearance=\"dark\"\n                keyboardType=\"default\"\n                onChangeText={comment => setComment(comment)}\n                value={state.password}\n                ref={myinput}\n              />\n              <Icon name=\"image\" size={25} color=\"rgb(95, 32, 155)\" />\n              <Icon\n                name=\"camera\"\n                size={25}\n                style={{ marginLeft: 10 }}\n                color=\"rgb(95, 32, 155)\"\n              />\n            </View>\n            <Icon\n              name=\"send\"\n              size={30}\n              style={{ marginLeft: 10 }}\n              color=\"rgb(95, 32, 155)\"\n              onPress={() => addCommment()}\n            />\n          </View>\n\n          <View style={{ marginTop: 10 }}></View>\n        </KeyboardAvoidingView>\n      )}\n    </View>\n  );\n};\n\nexport default SinglePost;\n\nconst styles = StyleSheet.create({\n  inputWrapper: {\n    flexDirection: \"row\",\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft: 10,\n    borderColor: \"#fff\",\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    marginTop: -10,\n    borderRadius: 30,\n    width: \"83%\"\n  },\n\n  inputField: {\n    width: \"78%\",\n    borderColor: \"#fff\",\n    backgroundColor: \"#fff\",\n    borderWidth: 2,\n    paddingLeft: 10\n  },\n  chatBubble1: {\n    padding: 20,\n    borderRadius: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    marginLeft: \"4%\",\n    maxWidth: \"80%\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    backgroundColor: \"rgb(95, 32, 155)\",\n    color: \"#fff\"\n  },\n\n  chatBubble2: {\n    padding: 20,\n    borderRadius: 5,\n    marginTop: 5,\n    marginBottom: 5,\n    maxWidth: \"80%\",\n    marginLeft: \"4%\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    backgroundColor: \"#fff\",\n    color: \"#fff\"\n  },\n\n  userAvatar: {\n    height: 40,\n    width: 40,\n    borderRadius: 50,\n    marginLeft: 10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}