{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-btr/src/Components/CollapsibleCard.tsx\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nexport function CollapsibleCard(_ref) {\n  var children = _ref.children,\n      _ref$iconDown = _ref.iconDown,\n      iconDown = _ref$iconDown === void 0 ? \"expand-more\" : _ref$iconDown,\n      iconStyle = _ref.iconStyle,\n      _ref$iconUp = _ref.iconUp,\n      iconUp = _ref$iconUp === void 0 ? \"expand-less\" : _ref$iconUp,\n      style = _ref.style,\n      title = _ref.title,\n      titleStyle = _ref.titleStyle,\n      _ref$visible = _ref.visible,\n      visible = _ref$visible === void 0 ? false : _ref$visible;\n\n  var _useState = useState(visible),\n      _useState2 = _slicedToArray(_useState, 2),\n      isVisible = _useState2[0],\n      setIsVisible = _useState2[1];\n\n  function toggle() {\n    setIsVisible(function (isVisible) {\n      return !isVisible;\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.header, style],\n    onPress: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.title, titleStyle],\n    numberOfLines: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, title), React.createElement(Icon, {\n    name: isVisible ? iconUp : iconDown,\n    style: [styles.icon, iconStyle],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), isVisible && React.createElement(View, {\n    style: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, children));\n}\nvar styles = StyleSheet.create({\n  container: {\n    margin: 5,\n    elevation: 2,\n    backgroundColor: \"#fff\",\n    borderRadius: 2\n  },\n  header: {\n    padding: 16,\n    flexDirection: \"row\"\n  },\n  title: {\n    flex: 1\n  },\n  icon: {\n    fontSize: 20\n  },\n  body: {\n    borderTopWidth: 1,\n    borderColor: \"#eee\"\n  }\n});","map":{"version":3,"sources":["/media/allen/SIMBAD/Flaskprojects/teklife/Teklife/node_modules/react-native-btr/src/Components/CollapsibleCard.tsx"],"names":["React","useState","Icon","CollapsibleCard","children","iconDown","iconStyle","iconUp","style","title","titleStyle","visible","isVisible","setIsVisible","toggle","styles","container","header","icon","body","StyleSheet","create","margin","elevation","backgroundColor","borderRadius","padding","flexDirection","flex","fontSize","borderTopWidth","borderColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,IAAP;AAgBA,OAAO,SAASC,eAAT,OASG;AAAA,MARRC,QAQQ,QARRA,QAQQ;AAAA,2BAPRC,QAOQ;AAAA,MAPRA,QAOQ,8BAPG,aAOH;AAAA,MANRC,SAMQ,QANRA,SAMQ;AAAA,yBALRC,MAKQ;AAAA,MALRA,MAKQ,4BALC,aAKD;AAAA,MAJRC,KAIQ,QAJRA,KAIQ;AAAA,MAHRC,KAGQ,QAHRA,KAGQ;AAAA,MAFRC,UAEQ,QAFRA,UAEQ;AAAA,0BADRC,OACQ;AAAA,MADRA,OACQ,6BADE,KACF;;AAAA,kBAC0BV,QAAQ,CAACU,OAAD,CADlC;AAAA;AAAA,MACDC,SADC;AAAA,MACUC,YADV;;AAGR,WAASC,MAAT,GAAkB;AAChBD,IAAAA,YAAY,CAAC,UAACD,SAAD;AAAA,aAAe,CAACA,SAAhB;AAAA,KAAD,CAAZ;AACD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,CAACD,MAAM,CAACE,MAAR,EAAgBT,KAAhB,CAAzB;AAAiD,IAAA,OAAO,EAAEM,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACN,KAAR,EAAeC,UAAf,CAAb;AAAyC,IAAA,aAAa,EAAE,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADF,EAIE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEG,SAAS,GAAGL,MAAH,GAAYF,QAD7B;AAEE,IAAA,KAAK,EAAE,CAACU,MAAM,CAACG,IAAR,EAAcZ,SAAd,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAUGM,SAAS,IAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACI,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Bf,QAA3B,CAVhB,CADF;AAcD;AAED,IAAMW,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,MAAM,EAAE,CADC;AAETC,IAAAA,SAAS,EAAE,CAFF;AAGTC,IAAAA,eAAe,EAAE,MAHR;AAITC,IAAAA,YAAY,EAAE;AAJL,GADoB;AAO/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,OAAO,EAAE,EADH;AAENC,IAAAA,aAAa,EAAE;AAFT,GAPuB;AAW/BlB,EAAAA,KAAK,EAAE;AAAEmB,IAAAA,IAAI,EAAE;AAAR,GAXwB;AAY/BV,EAAAA,IAAI,EAAE;AAAEW,IAAAA,QAAQ,EAAE;AAAZ,GAZyB;AAa/BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,cAAc,EAAE,CADZ;AAEJC,IAAAA,WAAW,EAAE;AAFT;AAbyB,CAAlB,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, TouchableOpacity, View, StyleSheet } from \"react-native\";\r\nimport Icon from \"react-native-vector-icons/MaterialIcons\";\r\n\r\nexport type CollapsibleCardProps = {\r\n  iconDown?: string;\r\n  iconStyle?: object;\r\n  iconUp?: string;\r\n  style?: object;\r\n  title?: string;\r\n  titleStyle?: object;\r\n  visible?: boolean;\r\n};\r\n\r\ntype Props = {\r\n  children: React.ReactChild | React.ReactChild[];\r\n} & CollapsibleCardProps;\r\n\r\nexport function CollapsibleCard({\r\n  children,\r\n  iconDown = \"expand-more\",\r\n  iconStyle,\r\n  iconUp = \"expand-less\",\r\n  style,\r\n  title,\r\n  titleStyle,\r\n  visible = false,\r\n}: Props) {\r\n  const [isVisible, setIsVisible] = useState(visible);\r\n\r\n  function toggle() {\r\n    setIsVisible((isVisible) => !isVisible);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity style={[styles.header, style]} onPress={toggle}>\r\n        <Text style={[styles.title, titleStyle]} numberOfLines={1}>\r\n          {title}\r\n        </Text>\r\n        <Icon\r\n          name={isVisible ? iconUp : iconDown}\r\n          style={[styles.icon, iconStyle]}\r\n        />\r\n      </TouchableOpacity>\r\n      {isVisible && <View style={styles.body}>{children}</View>}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    margin: 5,\r\n    elevation: 2,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 2,\r\n  },\r\n  header: {\r\n    padding: 16,\r\n    flexDirection: \"row\",\r\n  },\r\n  title: { flex: 1 },\r\n  icon: { fontSize: 20 },\r\n  body: {\r\n    borderTopWidth: 1,\r\n    borderColor: \"#eee\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}